// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_2_Matrix_Vector_Activa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY,
        weights_m_weights_V_address0,
        weights_m_weights_V_ce0,
        weights_m_weights_V_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [39:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [7:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;
output  [7:0] weights_m_weights_V_address0;
output   weights_m_weights_V_ce0;
input  [39:0] weights_m_weights_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_TREADY;
reg out_V_V_TVALID;
reg weights_m_weights_V_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] threshs_m_thresholds_2_address0;
reg    threshs_m_thresholds_2_ce0;
wire   [0:0] threshs_m_thresholds_2_q0;
wire   [4:0] threshs_m_thresholds_1_address0;
reg    threshs_m_thresholds_1_ce0;
wire   [0:0] threshs_m_thresholds_1_q0;
wire   [4:0] threshs_m_thresholds_address0;
reg    threshs_m_thresholds_ce0;
wire   [3:0] threshs_m_thresholds_q0;
reg    in_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln122_fu_306_p2;
wire   [0:0] icmp_ln125_fu_321_p2;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln160_reg_1864;
reg   [0:0] icmp_ln160_reg_1864_pp0_iter1_reg;
reg   [12:0] i_0_reg_271;
reg    ap_predicate_op46_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
wire   [12:0] i_fu_312_p2;
wire   [39:0] inElem_V_fu_358_p10;
wire   [0:0] icmp_ln137_fu_648_p2;
reg   [0:0] icmp_ln137_reg_1854;
wire   [0:0] icmp_ln160_fu_671_p2;
wire   [9:0] add_ln700_19_fu_1663_p2;
reg   [9:0] add_ln700_19_reg_1883;
reg   [0:0] threshs_m_thresholds_4_reg_1890;
reg   [0:0] threshs_m_thresholds_6_reg_1895;
reg   [3:0] threshs_m_thresholds_8_reg_1900;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire   [39:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_282;
reg   [39:0] ap_phi_reg_pp0_iter1_act_m_val_V_reg_282;
wire   [63:0] zext_ln137_fu_654_p1;
wire   [63:0] zext_ln186_fu_690_p1;
reg   [9:0] accu_V_0_0_0_fu_158;
reg   [31:0] tile_assign_fu_162;
wire   [31:0] tile_fu_659_p2;
wire   [31:0] tile_1_fu_717_p3;
reg   [31:0] sf_1_fu_166;
wire   [31:0] sf_fu_665_p2;
reg   [31:0] nf_assign_fu_170;
wire   [31:0] nf_1_fu_709_p3;
reg   [39:0] inputBuf_7_V_1_fu_174;
wire   [39:0] inputBuf_7_V_17_fu_594_p3;
reg   [39:0] inputBuf_7_V_2_fu_178;
wire   [39:0] inputBuf_7_V_16_fu_586_p3;
reg   [39:0] inputBuf_7_V_4_fu_182;
wire   [39:0] inputBuf_7_V_14_fu_570_p3;
reg   [39:0] inputBuf_7_V_6_fu_186;
wire   [39:0] inputBuf_7_V_13_fu_554_p3;
reg   [39:0] inputBuf_7_V_5_fu_190;
wire   [39:0] inputBuf_7_V_12_fu_530_p3;
reg   [39:0] inputBuf_7_V_3_fu_194;
wire   [39:0] inputBuf_7_V_11_fu_514_p3;
reg   [39:0] inputBuf_7_V_7_fu_198;
wire   [39:0] inputBuf_7_V_10_fu_490_p3;
reg   [39:0] inputBuf_7_V_8_fu_202;
wire   [39:0] inputBuf_7_V_fu_466_p3;
reg    ap_block_pp0_stage0_01001;
wire   [2:0] inElem_V_fu_358_p9;
wire   [2:0] trunc_ln321_fu_380_p1;
wire   [0:0] icmp_ln321_6_fu_420_p2;
wire   [0:0] icmp_ln321_5_fu_414_p2;
wire   [0:0] icmp_ln321_4_fu_408_p2;
wire   [0:0] icmp_ln321_3_fu_402_p2;
wire   [0:0] icmp_ln321_2_fu_396_p2;
wire   [0:0] icmp_ln321_1_fu_390_p2;
wire   [0:0] icmp_ln321_fu_384_p2;
wire   [0:0] or_ln321_fu_426_p2;
wire   [0:0] or_ln321_1_fu_432_p2;
wire   [0:0] or_ln321_2_fu_438_p2;
wire   [39:0] select_ln321_fu_444_p3;
wire   [0:0] or_ln321_3_fu_452_p2;
wire   [39:0] select_ln321_1_fu_458_p3;
wire   [39:0] select_ln321_3_fu_474_p3;
wire   [39:0] select_ln321_4_fu_482_p3;
wire   [39:0] select_ln321_6_fu_498_p3;
wire   [39:0] select_ln321_7_fu_506_p3;
wire   [39:0] select_ln321_9_fu_522_p3;
wire   [39:0] select_ln321_11_fu_538_p3;
wire   [39:0] select_ln321_12_fu_546_p3;
wire   [39:0] select_ln321_14_fu_562_p3;
wire   [39:0] inputBuf_7_V_15_fu_578_p3;
wire   [31:0] nf_fu_697_p2;
wire   [0:0] icmp_ln173_fu_703_p2;
wire  signed [1:0] wgt_M_instance_0_V_fu_745_p1;
wire   [1:0] trunc_ln647_fu_939_p1;
wire   [1:0] mul_ln1352_fu_951_p0;
wire  signed [3:0] mul_ln1352_fu_951_p2;
wire  signed [1:0] wgt_M_instance_1_V_fu_749_p4;
wire   [1:0] arg_V_read_assign_1_fu_961_p4;
wire   [1:0] mul_ln1352_1_fu_979_p0;
wire  signed [3:0] mul_ln1352_1_fu_979_p2;
wire  signed [1:0] wgt_M_instance_2_V_fu_759_p4;
wire   [1:0] arg_V_read_assign_2_fu_989_p4;
wire   [1:0] mul_ln1352_2_fu_1007_p0;
wire  signed [3:0] mul_ln1352_2_fu_1007_p2;
wire  signed [1:0] wgt_M_instance_3_V_fu_769_p4;
wire   [1:0] arg_V_read_assign_3_fu_1017_p4;
wire   [1:0] mul_ln1352_3_fu_1035_p0;
wire  signed [3:0] mul_ln1352_3_fu_1035_p2;
wire  signed [1:0] wgt_M_instance_4_V_fu_779_p4;
wire   [1:0] arg_V_read_assign_4_fu_1045_p4;
wire   [1:0] mul_ln1352_4_fu_1063_p0;
wire  signed [3:0] mul_ln1352_4_fu_1063_p2;
wire  signed [1:0] wgt_M_instance_5_V_fu_789_p4;
wire   [1:0] arg_V_read_assign_5_fu_1073_p4;
wire   [1:0] mul_ln1352_5_fu_1091_p0;
wire  signed [3:0] mul_ln1352_5_fu_1091_p2;
wire  signed [1:0] wgt_M_instance_6_V_fu_799_p4;
wire   [1:0] arg_V_read_assign_6_fu_1101_p4;
wire   [1:0] mul_ln1352_6_fu_1119_p0;
wire  signed [3:0] mul_ln1352_6_fu_1119_p2;
wire  signed [1:0] wgt_M_instance_7_V_fu_809_p4;
wire   [1:0] arg_V_read_assign_7_fu_1129_p4;
wire   [1:0] mul_ln1352_7_fu_1147_p0;
wire  signed [3:0] mul_ln1352_7_fu_1147_p2;
wire  signed [1:0] wgt_M_instance_8_V_fu_819_p4;
wire   [1:0] arg_V_read_assign_8_fu_1157_p4;
wire   [1:0] mul_ln1352_8_fu_1175_p0;
wire  signed [3:0] mul_ln1352_8_fu_1175_p2;
wire  signed [1:0] wgt_M_instance_9_V_fu_829_p4;
wire   [1:0] arg_V_read_assign_9_fu_1185_p4;
wire   [1:0] mul_ln1352_9_fu_1203_p0;
wire  signed [3:0] mul_ln1352_9_fu_1203_p2;
wire  signed [1:0] wgt_M_instance_10_s_fu_839_p4;
wire   [1:0] arg_V_read_assign_s_fu_1213_p4;
wire   [1:0] mul_ln1352_10_fu_1231_p0;
wire  signed [3:0] mul_ln1352_10_fu_1231_p2;
wire  signed [1:0] wgt_M_instance_11_s_fu_849_p4;
wire   [1:0] arg_V_read_assign_10_fu_1241_p4;
wire   [1:0] mul_ln1352_11_fu_1259_p0;
wire  signed [3:0] mul_ln1352_11_fu_1259_p2;
wire  signed [1:0] wgt_M_instance_12_s_fu_859_p4;
wire   [1:0] arg_V_read_assign_11_fu_1269_p4;
wire   [1:0] mul_ln1352_12_fu_1287_p0;
wire  signed [3:0] mul_ln1352_12_fu_1287_p2;
wire  signed [1:0] wgt_M_instance_13_s_fu_869_p4;
wire   [1:0] arg_V_read_assign_12_fu_1297_p4;
wire   [1:0] mul_ln1352_13_fu_1315_p0;
wire  signed [3:0] mul_ln1352_13_fu_1315_p2;
wire  signed [1:0] wgt_M_instance_14_s_fu_879_p4;
wire   [1:0] arg_V_read_assign_13_fu_1325_p4;
wire   [1:0] mul_ln1352_14_fu_1343_p0;
wire  signed [3:0] mul_ln1352_14_fu_1343_p2;
wire  signed [1:0] wgt_M_instance_15_s_fu_889_p4;
wire   [1:0] arg_V_read_assign_14_fu_1353_p4;
wire   [1:0] mul_ln1352_15_fu_1371_p0;
wire  signed [3:0] mul_ln1352_15_fu_1371_p2;
wire  signed [1:0] wgt_M_instance_16_s_fu_899_p4;
wire   [1:0] arg_V_read_assign_15_fu_1381_p4;
wire   [1:0] mul_ln1352_16_fu_1399_p0;
wire  signed [3:0] mul_ln1352_16_fu_1399_p2;
wire  signed [1:0] wgt_M_instance_17_s_fu_909_p4;
wire   [1:0] arg_V_read_assign_16_fu_1409_p4;
wire   [1:0] mul_ln1352_17_fu_1427_p0;
wire  signed [3:0] mul_ln1352_17_fu_1427_p2;
wire  signed [1:0] wgt_M_instance_18_s_fu_919_p4;
wire   [1:0] arg_V_read_assign_17_fu_1437_p4;
wire   [1:0] mul_ln1352_18_fu_1455_p0;
wire  signed [3:0] mul_ln1352_18_fu_1455_p2;
wire  signed [1:0] p_Result_s_fu_929_p4;
wire   [1:0] arg_V_read_assign_18_fu_1465_p4;
wire   [1:0] mul_ln1352_19_fu_1483_p0;
wire  signed [3:0] mul_ln1352_19_fu_1483_p2;
wire  signed [9:0] sext_ln700_fu_1433_p1;
wire   [9:0] res_V_fu_738_p3;
wire  signed [4:0] sext_ln170_15_fu_1377_p1;
wire  signed [4:0] sext_ln170_16_fu_1405_p1;
wire   [4:0] add_ln700_1_fu_1499_p2;
wire  signed [5:0] sext_ln170_17_fu_1461_p1;
wire  signed [5:0] sext_ln700_2_fu_1505_p1;
wire   [5:0] add_ln700_2_fu_1509_p2;
wire   [9:0] add_ln700_fu_1493_p2;
wire  signed [9:0] sext_ln700_3_fu_1515_p1;
wire  signed [4:0] sext_ln170_10_fu_1237_p1;
wire  signed [4:0] sext_ln170_14_fu_1349_p1;
wire   [4:0] add_ln700_4_fu_1525_p2;
wire  signed [4:0] sext_ln170_13_fu_1321_p1;
wire  signed [4:0] sext_ln170_11_fu_1265_p1;
wire   [4:0] add_ln700_5_fu_1535_p2;
wire  signed [5:0] sext_ln170_9_fu_1209_p1;
wire  signed [5:0] sext_ln700_5_fu_1541_p1;
wire  signed [5:0] sext_ln700_4_fu_1531_p1;
wire   [5:0] add_ln700_6_fu_1545_p2;
wire   [5:0] add_ln700_7_fu_1551_p2;
wire   [9:0] add_ln700_3_fu_1519_p2;
wire  signed [9:0] sext_ln700_6_fu_1557_p1;
wire  signed [4:0] sext_ln170_fu_957_p1;
wire  signed [4:0] sext_ln170_12_fu_1293_p1;
wire   [4:0] add_ln700_9_fu_1567_p2;
wire  signed [4:0] sext_ln170_2_fu_1013_p1;
wire  signed [4:0] sext_ln170_3_fu_1041_p1;
wire   [4:0] add_ln700_10_fu_1577_p2;
wire  signed [5:0] sext_ln170_1_fu_985_p1;
wire  signed [5:0] sext_ln700_8_fu_1583_p1;
wire  signed [5:0] sext_ln700_7_fu_1573_p1;
wire   [5:0] add_ln700_11_fu_1587_p2;
wire   [5:0] add_ln700_12_fu_1593_p2;
wire  signed [4:0] sext_ln170_6_fu_1125_p1;
wire  signed [4:0] sext_ln170_4_fu_1069_p1;
wire   [4:0] add_ln700_13_fu_1603_p2;
wire  signed [5:0] sext_ln170_5_fu_1097_p1;
wire  signed [5:0] sext_ln700_10_fu_1609_p1;
wire   [5:0] add_ln700_14_fu_1613_p2;
wire  signed [4:0] sext_ln700_1_fu_1489_p1;
wire  signed [4:0] sext_ln170_7_fu_1153_p1;
wire   [4:0] add_ln700_15_fu_1623_p2;
wire  signed [5:0] sext_ln170_8_fu_1181_p1;
wire  signed [5:0] sext_ln700_12_fu_1629_p1;
wire   [5:0] add_ln700_16_fu_1633_p2;
wire  signed [6:0] sext_ln700_11_fu_1619_p1;
wire  signed [6:0] sext_ln700_13_fu_1639_p1;
wire   [6:0] add_ln700_17_fu_1643_p2;
wire  signed [7:0] sext_ln700_9_fu_1599_p1;
wire  signed [7:0] sext_ln700_14_fu_1649_p1;
wire   [7:0] add_ln700_18_fu_1653_p2;
wire   [9:0] add_ln700_8_fu_1561_p2;
wire  signed [9:0] sext_ln700_15_fu_1659_p1;
wire   [9:0] select_ln186_fu_1674_p3;
wire   [0:0] icmp_ln899_fu_1681_p2;
wire   [0:0] xor_ln899_fu_1686_p2;
wire   [9:0] select_ln186_1_fu_1696_p3;
wire   [0:0] icmp_ln899_1_fu_1703_p2;
wire   [0:0] xor_ln899_1_fu_1708_p2;
wire   [9:0] zext_ln186_1_fu_1718_p1;
wire   [0:0] icmp_ln899_2_fu_1721_p2;
wire   [0:0] xor_ln899_2_fu_1726_p2;
wire   [1:0] zext_ln700_1_fu_1714_p1;
wire   [1:0] zext_ln700_2_fu_1732_p1;
wire   [1:0] add_ln700_20_fu_1736_p2;
wire   [1:0] zext_ln700_fu_1692_p1;
wire   [1:0] tmp_V_fu_1742_p2;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [3:0] mul_ln1352_10_fu_1231_p00;
wire   [3:0] mul_ln1352_11_fu_1259_p00;
wire   [3:0] mul_ln1352_12_fu_1287_p00;
wire   [3:0] mul_ln1352_13_fu_1315_p00;
wire   [3:0] mul_ln1352_14_fu_1343_p00;
wire   [3:0] mul_ln1352_15_fu_1371_p00;
wire   [3:0] mul_ln1352_16_fu_1399_p00;
wire   [3:0] mul_ln1352_17_fu_1427_p00;
wire   [3:0] mul_ln1352_18_fu_1455_p00;
wire   [3:0] mul_ln1352_19_fu_1483_p00;
wire   [3:0] mul_ln1352_1_fu_979_p00;
wire   [3:0] mul_ln1352_2_fu_1007_p00;
wire   [3:0] mul_ln1352_3_fu_1035_p00;
wire   [3:0] mul_ln1352_4_fu_1063_p00;
wire   [3:0] mul_ln1352_5_fu_1091_p00;
wire   [3:0] mul_ln1352_6_fu_1119_p00;
wire   [3:0] mul_ln1352_7_fu_1147_p00;
wire   [3:0] mul_ln1352_8_fu_1175_p00;
wire   [3:0] mul_ln1352_9_fu_1203_p00;
wire   [3:0] mul_ln1352_fu_951_p00;
reg    ap_condition_112;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

StreamingFCLayer_Batch_2_Matrix_Vector_Actbkb #(
    .DataWidth( 1 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_2_address0),
    .ce0(threshs_m_thresholds_2_ce0),
    .q0(threshs_m_thresholds_2_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actbkb #(
    .DataWidth( 1 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_1_address0),
    .ce0(threshs_m_thresholds_1_ce0),
    .q0(threshs_m_thresholds_1_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActdEe #(
    .DataWidth( 4 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_address0),
    .ce0(threshs_m_thresholds_ce0),
    .q0(threshs_m_thresholds_q0)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 40 ),
    .din1_WIDTH( 40 ),
    .din2_WIDTH( 40 ),
    .din3_WIDTH( 40 ),
    .din4_WIDTH( 40 ),
    .din5_WIDTH( 40 ),
    .din6_WIDTH( 40 ),
    .din7_WIDTH( 40 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 40 ))
StreamingFCLayer_eOg_U1(
    .din0(inputBuf_7_V_1_fu_174),
    .din1(inputBuf_7_V_2_fu_178),
    .din2(inputBuf_7_V_4_fu_182),
    .din3(inputBuf_7_V_6_fu_186),
    .din4(inputBuf_7_V_5_fu_190),
    .din5(inputBuf_7_V_3_fu_194),
    .din6(inputBuf_7_V_7_fu_198),
    .din7(inputBuf_7_V_8_fu_202),
    .din8(inElem_V_fu_358_p9),
    .dout(inElem_V_fu_358_p10)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U2(
    .din0(mul_ln1352_fu_951_p0),
    .din1(wgt_M_instance_0_V_fu_745_p1),
    .dout(mul_ln1352_fu_951_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U3(
    .din0(mul_ln1352_1_fu_979_p0),
    .din1(wgt_M_instance_1_V_fu_749_p4),
    .dout(mul_ln1352_1_fu_979_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U4(
    .din0(mul_ln1352_2_fu_1007_p0),
    .din1(wgt_M_instance_2_V_fu_759_p4),
    .dout(mul_ln1352_2_fu_1007_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U5(
    .din0(mul_ln1352_3_fu_1035_p0),
    .din1(wgt_M_instance_3_V_fu_769_p4),
    .dout(mul_ln1352_3_fu_1035_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U6(
    .din0(mul_ln1352_4_fu_1063_p0),
    .din1(wgt_M_instance_4_V_fu_779_p4),
    .dout(mul_ln1352_4_fu_1063_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U7(
    .din0(mul_ln1352_5_fu_1091_p0),
    .din1(wgt_M_instance_5_V_fu_789_p4),
    .dout(mul_ln1352_5_fu_1091_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U8(
    .din0(mul_ln1352_6_fu_1119_p0),
    .din1(wgt_M_instance_6_V_fu_799_p4),
    .dout(mul_ln1352_6_fu_1119_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U9(
    .din0(mul_ln1352_7_fu_1147_p0),
    .din1(wgt_M_instance_7_V_fu_809_p4),
    .dout(mul_ln1352_7_fu_1147_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U10(
    .din0(mul_ln1352_8_fu_1175_p0),
    .din1(wgt_M_instance_8_V_fu_819_p4),
    .dout(mul_ln1352_8_fu_1175_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U11(
    .din0(mul_ln1352_9_fu_1203_p0),
    .din1(wgt_M_instance_9_V_fu_829_p4),
    .dout(mul_ln1352_9_fu_1203_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U12(
    .din0(mul_ln1352_10_fu_1231_p0),
    .din1(wgt_M_instance_10_s_fu_839_p4),
    .dout(mul_ln1352_10_fu_1231_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U13(
    .din0(mul_ln1352_11_fu_1259_p0),
    .din1(wgt_M_instance_11_s_fu_849_p4),
    .dout(mul_ln1352_11_fu_1259_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U14(
    .din0(mul_ln1352_12_fu_1287_p0),
    .din1(wgt_M_instance_12_s_fu_859_p4),
    .dout(mul_ln1352_12_fu_1287_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U15(
    .din0(mul_ln1352_13_fu_1315_p0),
    .din1(wgt_M_instance_13_s_fu_869_p4),
    .dout(mul_ln1352_13_fu_1315_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U16(
    .din0(mul_ln1352_14_fu_1343_p0),
    .din1(wgt_M_instance_14_s_fu_879_p4),
    .dout(mul_ln1352_14_fu_1343_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U17(
    .din0(mul_ln1352_15_fu_1371_p0),
    .din1(wgt_M_instance_15_s_fu_889_p4),
    .dout(mul_ln1352_15_fu_1371_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U18(
    .din0(mul_ln1352_16_fu_1399_p0),
    .din1(wgt_M_instance_16_s_fu_899_p4),
    .dout(mul_ln1352_16_fu_1399_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U19(
    .din0(mul_ln1352_17_fu_1427_p0),
    .din1(wgt_M_instance_17_s_fu_909_p4),
    .dout(mul_ln1352_17_fu_1427_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U20(
    .din0(mul_ln1352_18_fu_1455_p0),
    .din1(wgt_M_instance_18_s_fu_919_p4),
    .dout(mul_ln1352_18_fu_1455_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U21(
    .din0(mul_ln1352_19_fu_1483_p0),
    .din1(p_Result_s_fu_929_p4),
    .dout(mul_ln1352_19_fu_1483_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_112)) begin
        if (((icmp_ln125_fu_321_p2 == 1'd0) & (icmp_ln122_fu_306_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_282 <= inElem_V_fu_358_p10;
        end else if (((icmp_ln125_fu_321_p2 == 1'd1) & (icmp_ln122_fu_306_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_282 <= in_V_V_TDATA;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_282 <= ap_phi_reg_pp0_iter0_act_m_val_V_reg_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_306_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_271 <= i_fu_312_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_271 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_671_p2 == 1'd1) & (icmp_ln122_fu_306_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nf_assign_fu_170 <= nf_1_fu_709_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_170 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_671_p2 == 1'd0) & (icmp_ln122_fu_306_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_1_fu_166 <= sf_fu_665_p2;
    end else if ((((icmp_ln160_fu_671_p2 == 1'd1) & (icmp_ln122_fu_306_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_1_fu_166 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_671_p2 == 1'd1) & (icmp_ln122_fu_306_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tile_assign_fu_162 <= tile_1_fu_717_p3;
    end else if (((icmp_ln160_fu_671_p2 == 1'd0) & (icmp_ln122_fu_306_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tile_assign_fu_162 <= tile_fu_659_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_assign_fu_162 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accu_V_0_0_0_fu_158 <= add_ln700_19_fu_1663_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln700_19_reg_1883 <= add_ln700_19_fu_1663_p2;
        icmp_ln160_reg_1864_pp0_iter1_reg <= icmp_ln160_reg_1864;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln137_reg_1854 <= icmp_ln137_fu_648_p2;
        icmp_ln160_reg_1864 <= icmp_ln160_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_321_p2 == 1'd1) & (icmp_ln122_fu_306_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_7_V_1_fu_174 <= inputBuf_7_V_17_fu_594_p3;
        inputBuf_7_V_2_fu_178 <= inputBuf_7_V_16_fu_586_p3;
        inputBuf_7_V_3_fu_194 <= inputBuf_7_V_11_fu_514_p3;
        inputBuf_7_V_4_fu_182 <= inputBuf_7_V_14_fu_570_p3;
        inputBuf_7_V_5_fu_190 <= inputBuf_7_V_12_fu_530_p3;
        inputBuf_7_V_6_fu_186 <= inputBuf_7_V_13_fu_554_p3;
        inputBuf_7_V_7_fu_198 <= inputBuf_7_V_10_fu_490_p3;
        inputBuf_7_V_8_fu_202 <= inputBuf_7_V_fu_466_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_reg_1864 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_4_reg_1890 <= threshs_m_thresholds_2_q0;
        threshs_m_thresholds_6_reg_1895 <= threshs_m_thresholds_1_q0;
        threshs_m_thresholds_8_reg_1900 <= threshs_m_thresholds_q0;
    end
end

always @ (*) begin
    if ((icmp_ln122_fu_306_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln125_fu_321_p2 == 1'd1) & (icmp_ln122_fu_306_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_TDATA_blk_n = in_V_V_TVALID;
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op46_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_TREADY = 1'b1;
    end else begin
        in_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_reg_1864_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln160_reg_1864_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_1_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_2_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_m_weights_V_ce0 = 1'b1;
    end else begin
        weights_m_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln122_fu_306_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln122_fu_306_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_10_fu_1577_p2 = ($signed(sext_ln170_2_fu_1013_p1) + $signed(sext_ln170_3_fu_1041_p1));

assign add_ln700_11_fu_1587_p2 = ($signed(sext_ln170_1_fu_985_p1) + $signed(sext_ln700_8_fu_1583_p1));

assign add_ln700_12_fu_1593_p2 = ($signed(sext_ln700_7_fu_1573_p1) + $signed(add_ln700_11_fu_1587_p2));

assign add_ln700_13_fu_1603_p2 = ($signed(sext_ln170_6_fu_1125_p1) + $signed(sext_ln170_4_fu_1069_p1));

assign add_ln700_14_fu_1613_p2 = ($signed(sext_ln170_5_fu_1097_p1) + $signed(sext_ln700_10_fu_1609_p1));

assign add_ln700_15_fu_1623_p2 = ($signed(sext_ln700_1_fu_1489_p1) + $signed(sext_ln170_7_fu_1153_p1));

assign add_ln700_16_fu_1633_p2 = ($signed(sext_ln170_8_fu_1181_p1) + $signed(sext_ln700_12_fu_1629_p1));

assign add_ln700_17_fu_1643_p2 = ($signed(sext_ln700_11_fu_1619_p1) + $signed(sext_ln700_13_fu_1639_p1));

assign add_ln700_18_fu_1653_p2 = ($signed(sext_ln700_9_fu_1599_p1) + $signed(sext_ln700_14_fu_1649_p1));

assign add_ln700_19_fu_1663_p2 = ($signed(add_ln700_8_fu_1561_p2) + $signed(sext_ln700_15_fu_1659_p1));

assign add_ln700_1_fu_1499_p2 = ($signed(sext_ln170_15_fu_1377_p1) + $signed(sext_ln170_16_fu_1405_p1));

assign add_ln700_20_fu_1736_p2 = (zext_ln700_1_fu_1714_p1 + zext_ln700_2_fu_1732_p1);

assign add_ln700_2_fu_1509_p2 = ($signed(sext_ln170_17_fu_1461_p1) + $signed(sext_ln700_2_fu_1505_p1));

assign add_ln700_3_fu_1519_p2 = ($signed(add_ln700_fu_1493_p2) + $signed(sext_ln700_3_fu_1515_p1));

assign add_ln700_4_fu_1525_p2 = ($signed(sext_ln170_10_fu_1237_p1) + $signed(sext_ln170_14_fu_1349_p1));

assign add_ln700_5_fu_1535_p2 = ($signed(sext_ln170_13_fu_1321_p1) + $signed(sext_ln170_11_fu_1265_p1));

assign add_ln700_6_fu_1545_p2 = ($signed(sext_ln170_9_fu_1209_p1) + $signed(sext_ln700_5_fu_1541_p1));

assign add_ln700_7_fu_1551_p2 = ($signed(sext_ln700_4_fu_1531_p1) + $signed(add_ln700_6_fu_1545_p2));

assign add_ln700_8_fu_1561_p2 = ($signed(add_ln700_3_fu_1519_p2) + $signed(sext_ln700_6_fu_1557_p1));

assign add_ln700_9_fu_1567_p2 = ($signed(sext_ln170_fu_957_p1) + $signed(sext_ln170_12_fu_1293_p1));

assign add_ln700_fu_1493_p2 = ($signed(sext_ln700_fu_1433_p1) + $signed(res_V_fu_738_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op46_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op46_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op46_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((in_V_V_TVALID == 1'b0) & (ap_predicate_op46_read_state2 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((icmp_ln160_reg_1864_pp0_iter1_reg == 1'd1) & (out_V_V_TREADY == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_112 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_282 = 'bx;

always @ (*) begin
    ap_predicate_op46_read_state2 = ((icmp_ln125_fu_321_p2 == 1'd1) & (icmp_ln122_fu_306_p2 == 1'd0));
end

assign arg_V_read_assign_10_fu_1241_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[23:22]}};

assign arg_V_read_assign_11_fu_1269_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[25:24]}};

assign arg_V_read_assign_12_fu_1297_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[27:26]}};

assign arg_V_read_assign_13_fu_1325_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[29:28]}};

assign arg_V_read_assign_14_fu_1353_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[31:30]}};

assign arg_V_read_assign_15_fu_1381_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[33:32]}};

assign arg_V_read_assign_16_fu_1409_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[35:34]}};

assign arg_V_read_assign_17_fu_1437_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[37:36]}};

assign arg_V_read_assign_18_fu_1465_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[39:38]}};

assign arg_V_read_assign_1_fu_961_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[3:2]}};

assign arg_V_read_assign_2_fu_989_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[5:4]}};

assign arg_V_read_assign_3_fu_1017_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[7:6]}};

assign arg_V_read_assign_4_fu_1045_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[9:8]}};

assign arg_V_read_assign_5_fu_1073_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[11:10]}};

assign arg_V_read_assign_6_fu_1101_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[13:12]}};

assign arg_V_read_assign_7_fu_1129_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[15:14]}};

assign arg_V_read_assign_8_fu_1157_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[17:16]}};

assign arg_V_read_assign_9_fu_1185_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[19:18]}};

assign arg_V_read_assign_s_fu_1213_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[21:20]}};

assign i_fu_312_p2 = (i_0_reg_271 + 13'd1);

assign icmp_ln122_fu_306_p2 = ((i_0_reg_271 == 13'd7200) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_321_p2 = ((nf_assign_fu_170 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_648_p2 = ((sf_1_fu_166 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_671_p2 = ((sf_fu_665_p2 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_703_p2 = ((nf_fu_697_p2 == 32'd30) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_390_p2 = ((trunc_ln321_fu_380_p1 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_396_p2 = ((trunc_ln321_fu_380_p1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_3_fu_402_p2 = ((trunc_ln321_fu_380_p1 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_4_fu_408_p2 = ((trunc_ln321_fu_380_p1 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_5_fu_414_p2 = ((trunc_ln321_fu_380_p1 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_6_fu_420_p2 = ((trunc_ln321_fu_380_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_384_p2 = ((trunc_ln321_fu_380_p1 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_1703_p2 = (($signed(add_ln700_19_reg_1883) < $signed(select_ln186_1_fu_1696_p3)) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_1721_p2 = (($signed(add_ln700_19_reg_1883) < $signed(zext_ln186_1_fu_1718_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_1681_p2 = (($signed(add_ln700_19_reg_1883) < $signed(select_ln186_fu_1674_p3)) ? 1'b1 : 1'b0);

assign inElem_V_fu_358_p9 = sf_1_fu_166[2:0];

assign inputBuf_7_V_10_fu_490_p3 = ((or_ln321_3_fu_452_p2[0:0] === 1'b1) ? inputBuf_7_V_7_fu_198 : select_ln321_4_fu_482_p3);

assign inputBuf_7_V_11_fu_514_p3 = ((or_ln321_3_fu_452_p2[0:0] === 1'b1) ? inputBuf_7_V_3_fu_194 : select_ln321_7_fu_506_p3);

assign inputBuf_7_V_12_fu_530_p3 = ((or_ln321_3_fu_452_p2[0:0] === 1'b1) ? inputBuf_7_V_5_fu_190 : select_ln321_9_fu_522_p3);

assign inputBuf_7_V_13_fu_554_p3 = ((or_ln321_3_fu_452_p2[0:0] === 1'b1) ? select_ln321_12_fu_546_p3 : inputBuf_7_V_6_fu_186);

assign inputBuf_7_V_14_fu_570_p3 = ((or_ln321_fu_426_p2[0:0] === 1'b1) ? inputBuf_7_V_4_fu_182 : select_ln321_14_fu_562_p3);

assign inputBuf_7_V_15_fu_578_p3 = ((icmp_ln321_5_fu_414_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_2_fu_178);

assign inputBuf_7_V_16_fu_586_p3 = ((icmp_ln321_6_fu_420_p2[0:0] === 1'b1) ? inputBuf_7_V_2_fu_178 : inputBuf_7_V_15_fu_578_p3);

assign inputBuf_7_V_17_fu_594_p3 = ((icmp_ln321_6_fu_420_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_1_fu_174);

assign inputBuf_7_V_fu_466_p3 = ((or_ln321_3_fu_452_p2[0:0] === 1'b1) ? inputBuf_7_V_8_fu_202 : select_ln321_1_fu_458_p3);

assign mul_ln1352_10_fu_1231_p0 = mul_ln1352_10_fu_1231_p00;

assign mul_ln1352_10_fu_1231_p00 = arg_V_read_assign_s_fu_1213_p4;

assign mul_ln1352_11_fu_1259_p0 = mul_ln1352_11_fu_1259_p00;

assign mul_ln1352_11_fu_1259_p00 = arg_V_read_assign_10_fu_1241_p4;

assign mul_ln1352_12_fu_1287_p0 = mul_ln1352_12_fu_1287_p00;

assign mul_ln1352_12_fu_1287_p00 = arg_V_read_assign_11_fu_1269_p4;

assign mul_ln1352_13_fu_1315_p0 = mul_ln1352_13_fu_1315_p00;

assign mul_ln1352_13_fu_1315_p00 = arg_V_read_assign_12_fu_1297_p4;

assign mul_ln1352_14_fu_1343_p0 = mul_ln1352_14_fu_1343_p00;

assign mul_ln1352_14_fu_1343_p00 = arg_V_read_assign_13_fu_1325_p4;

assign mul_ln1352_15_fu_1371_p0 = mul_ln1352_15_fu_1371_p00;

assign mul_ln1352_15_fu_1371_p00 = arg_V_read_assign_14_fu_1353_p4;

assign mul_ln1352_16_fu_1399_p0 = mul_ln1352_16_fu_1399_p00;

assign mul_ln1352_16_fu_1399_p00 = arg_V_read_assign_15_fu_1381_p4;

assign mul_ln1352_17_fu_1427_p0 = mul_ln1352_17_fu_1427_p00;

assign mul_ln1352_17_fu_1427_p00 = arg_V_read_assign_16_fu_1409_p4;

assign mul_ln1352_18_fu_1455_p0 = mul_ln1352_18_fu_1455_p00;

assign mul_ln1352_18_fu_1455_p00 = arg_V_read_assign_17_fu_1437_p4;

assign mul_ln1352_19_fu_1483_p0 = mul_ln1352_19_fu_1483_p00;

assign mul_ln1352_19_fu_1483_p00 = arg_V_read_assign_18_fu_1465_p4;

assign mul_ln1352_1_fu_979_p0 = mul_ln1352_1_fu_979_p00;

assign mul_ln1352_1_fu_979_p00 = arg_V_read_assign_1_fu_961_p4;

assign mul_ln1352_2_fu_1007_p0 = mul_ln1352_2_fu_1007_p00;

assign mul_ln1352_2_fu_1007_p00 = arg_V_read_assign_2_fu_989_p4;

assign mul_ln1352_3_fu_1035_p0 = mul_ln1352_3_fu_1035_p00;

assign mul_ln1352_3_fu_1035_p00 = arg_V_read_assign_3_fu_1017_p4;

assign mul_ln1352_4_fu_1063_p0 = mul_ln1352_4_fu_1063_p00;

assign mul_ln1352_4_fu_1063_p00 = arg_V_read_assign_4_fu_1045_p4;

assign mul_ln1352_5_fu_1091_p0 = mul_ln1352_5_fu_1091_p00;

assign mul_ln1352_5_fu_1091_p00 = arg_V_read_assign_5_fu_1073_p4;

assign mul_ln1352_6_fu_1119_p0 = mul_ln1352_6_fu_1119_p00;

assign mul_ln1352_6_fu_1119_p00 = arg_V_read_assign_6_fu_1101_p4;

assign mul_ln1352_7_fu_1147_p0 = mul_ln1352_7_fu_1147_p00;

assign mul_ln1352_7_fu_1147_p00 = arg_V_read_assign_7_fu_1129_p4;

assign mul_ln1352_8_fu_1175_p0 = mul_ln1352_8_fu_1175_p00;

assign mul_ln1352_8_fu_1175_p00 = arg_V_read_assign_8_fu_1157_p4;

assign mul_ln1352_9_fu_1203_p0 = mul_ln1352_9_fu_1203_p00;

assign mul_ln1352_9_fu_1203_p00 = arg_V_read_assign_9_fu_1185_p4;

assign mul_ln1352_fu_951_p0 = mul_ln1352_fu_951_p00;

assign mul_ln1352_fu_951_p00 = trunc_ln647_fu_939_p1;

assign nf_1_fu_709_p3 = ((icmp_ln173_fu_703_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_697_p2);

assign nf_fu_697_p2 = (nf_assign_fu_170 + 32'd1);

assign or_ln321_1_fu_432_p2 = (icmp_ln321_4_fu_408_p2 | icmp_ln321_3_fu_402_p2);

assign or_ln321_2_fu_438_p2 = (icmp_ln321_2_fu_396_p2 | icmp_ln321_1_fu_390_p2);

assign or_ln321_3_fu_452_p2 = (or_ln321_fu_426_p2 | or_ln321_1_fu_432_p2);

assign or_ln321_fu_426_p2 = (icmp_ln321_6_fu_420_p2 | icmp_ln321_5_fu_414_p2);

assign out_V_V_TDATA = tmp_V_fu_1742_p2;

assign p_Result_s_fu_929_p4 = {{weights_m_weights_V_q0[39:38]}};

assign res_V_fu_738_p3 = ((icmp_ln137_reg_1854[0:0] === 1'b1) ? 10'd0 : accu_V_0_0_0_fu_158);

assign select_ln186_1_fu_1696_p3 = ((threshs_m_thresholds_6_reg_1895[0:0] === 1'b1) ? 10'd7 : 10'd0);

assign select_ln186_fu_1674_p3 = ((threshs_m_thresholds_4_reg_1890[0:0] === 1'b1) ? 10'd3 : 10'd0);

assign select_ln321_11_fu_538_p3 = ((icmp_ln321_4_fu_408_p2[0:0] === 1'b1) ? inputBuf_7_V_6_fu_186 : in_V_V_TDATA);

assign select_ln321_12_fu_546_p3 = ((or_ln321_fu_426_p2[0:0] === 1'b1) ? inputBuf_7_V_6_fu_186 : select_ln321_11_fu_538_p3);

assign select_ln321_14_fu_562_p3 = ((icmp_ln321_4_fu_408_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_4_fu_182);

assign select_ln321_1_fu_458_p3 = ((or_ln321_2_fu_438_p2[0:0] === 1'b1) ? inputBuf_7_V_8_fu_202 : select_ln321_fu_444_p3);

assign select_ln321_3_fu_474_p3 = ((icmp_ln321_fu_384_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_7_fu_198);

assign select_ln321_4_fu_482_p3 = ((or_ln321_2_fu_438_p2[0:0] === 1'b1) ? inputBuf_7_V_7_fu_198 : select_ln321_3_fu_474_p3);

assign select_ln321_6_fu_498_p3 = ((icmp_ln321_2_fu_396_p2[0:0] === 1'b1) ? inputBuf_7_V_3_fu_194 : in_V_V_TDATA);

assign select_ln321_7_fu_506_p3 = ((or_ln321_2_fu_438_p2[0:0] === 1'b1) ? select_ln321_6_fu_498_p3 : inputBuf_7_V_3_fu_194);

assign select_ln321_9_fu_522_p3 = ((icmp_ln321_2_fu_396_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_5_fu_190);

assign select_ln321_fu_444_p3 = ((icmp_ln321_fu_384_p2[0:0] === 1'b1) ? inputBuf_7_V_8_fu_202 : in_V_V_TDATA);

assign sext_ln170_10_fu_1237_p1 = mul_ln1352_10_fu_1231_p2;

assign sext_ln170_11_fu_1265_p1 = mul_ln1352_11_fu_1259_p2;

assign sext_ln170_12_fu_1293_p1 = mul_ln1352_12_fu_1287_p2;

assign sext_ln170_13_fu_1321_p1 = mul_ln1352_13_fu_1315_p2;

assign sext_ln170_14_fu_1349_p1 = mul_ln1352_14_fu_1343_p2;

assign sext_ln170_15_fu_1377_p1 = mul_ln1352_15_fu_1371_p2;

assign sext_ln170_16_fu_1405_p1 = mul_ln1352_16_fu_1399_p2;

assign sext_ln170_17_fu_1461_p1 = mul_ln1352_18_fu_1455_p2;

assign sext_ln170_1_fu_985_p1 = mul_ln1352_1_fu_979_p2;

assign sext_ln170_2_fu_1013_p1 = mul_ln1352_2_fu_1007_p2;

assign sext_ln170_3_fu_1041_p1 = mul_ln1352_3_fu_1035_p2;

assign sext_ln170_4_fu_1069_p1 = mul_ln1352_4_fu_1063_p2;

assign sext_ln170_5_fu_1097_p1 = mul_ln1352_5_fu_1091_p2;

assign sext_ln170_6_fu_1125_p1 = mul_ln1352_6_fu_1119_p2;

assign sext_ln170_7_fu_1153_p1 = mul_ln1352_7_fu_1147_p2;

assign sext_ln170_8_fu_1181_p1 = mul_ln1352_8_fu_1175_p2;

assign sext_ln170_9_fu_1209_p1 = mul_ln1352_9_fu_1203_p2;

assign sext_ln170_fu_957_p1 = mul_ln1352_fu_951_p2;

assign sext_ln700_10_fu_1609_p1 = $signed(add_ln700_13_fu_1603_p2);

assign sext_ln700_11_fu_1619_p1 = $signed(add_ln700_14_fu_1613_p2);

assign sext_ln700_12_fu_1629_p1 = $signed(add_ln700_15_fu_1623_p2);

assign sext_ln700_13_fu_1639_p1 = $signed(add_ln700_16_fu_1633_p2);

assign sext_ln700_14_fu_1649_p1 = $signed(add_ln700_17_fu_1643_p2);

assign sext_ln700_15_fu_1659_p1 = $signed(add_ln700_18_fu_1653_p2);

assign sext_ln700_1_fu_1489_p1 = mul_ln1352_19_fu_1483_p2;

assign sext_ln700_2_fu_1505_p1 = $signed(add_ln700_1_fu_1499_p2);

assign sext_ln700_3_fu_1515_p1 = $signed(add_ln700_2_fu_1509_p2);

assign sext_ln700_4_fu_1531_p1 = $signed(add_ln700_4_fu_1525_p2);

assign sext_ln700_5_fu_1541_p1 = $signed(add_ln700_5_fu_1535_p2);

assign sext_ln700_6_fu_1557_p1 = $signed(add_ln700_7_fu_1551_p2);

assign sext_ln700_7_fu_1573_p1 = $signed(add_ln700_9_fu_1567_p2);

assign sext_ln700_8_fu_1583_p1 = $signed(add_ln700_10_fu_1577_p2);

assign sext_ln700_9_fu_1599_p1 = $signed(add_ln700_12_fu_1593_p2);

assign sext_ln700_fu_1433_p1 = mul_ln1352_17_fu_1427_p2;

assign sf_fu_665_p2 = (32'd1 + sf_1_fu_166);

assign threshs_m_thresholds_1_address0 = zext_ln186_fu_690_p1;

assign threshs_m_thresholds_2_address0 = zext_ln186_fu_690_p1;

assign threshs_m_thresholds_address0 = zext_ln186_fu_690_p1;

assign tile_1_fu_717_p3 = ((icmp_ln173_fu_703_p2[0:0] === 1'b1) ? 32'd0 : tile_fu_659_p2);

assign tile_fu_659_p2 = (32'd1 + tile_assign_fu_162);

assign tmp_V_fu_1742_p2 = (add_ln700_20_fu_1736_p2 + zext_ln700_fu_1692_p1);

assign trunc_ln321_fu_380_p1 = sf_1_fu_166[2:0];

assign trunc_ln647_fu_939_p1 = ap_phi_reg_pp0_iter1_act_m_val_V_reg_282[1:0];

assign weights_m_weights_V_address0 = zext_ln137_fu_654_p1;

assign wgt_M_instance_0_V_fu_745_p1 = weights_m_weights_V_q0[1:0];

assign wgt_M_instance_10_s_fu_839_p4 = {{weights_m_weights_V_q0[21:20]}};

assign wgt_M_instance_11_s_fu_849_p4 = {{weights_m_weights_V_q0[23:22]}};

assign wgt_M_instance_12_s_fu_859_p4 = {{weights_m_weights_V_q0[25:24]}};

assign wgt_M_instance_13_s_fu_869_p4 = {{weights_m_weights_V_q0[27:26]}};

assign wgt_M_instance_14_s_fu_879_p4 = {{weights_m_weights_V_q0[29:28]}};

assign wgt_M_instance_15_s_fu_889_p4 = {{weights_m_weights_V_q0[31:30]}};

assign wgt_M_instance_16_s_fu_899_p4 = {{weights_m_weights_V_q0[33:32]}};

assign wgt_M_instance_17_s_fu_909_p4 = {{weights_m_weights_V_q0[35:34]}};

assign wgt_M_instance_18_s_fu_919_p4 = {{weights_m_weights_V_q0[37:36]}};

assign wgt_M_instance_1_V_fu_749_p4 = {{weights_m_weights_V_q0[3:2]}};

assign wgt_M_instance_2_V_fu_759_p4 = {{weights_m_weights_V_q0[5:4]}};

assign wgt_M_instance_3_V_fu_769_p4 = {{weights_m_weights_V_q0[7:6]}};

assign wgt_M_instance_4_V_fu_779_p4 = {{weights_m_weights_V_q0[9:8]}};

assign wgt_M_instance_5_V_fu_789_p4 = {{weights_m_weights_V_q0[11:10]}};

assign wgt_M_instance_6_V_fu_799_p4 = {{weights_m_weights_V_q0[13:12]}};

assign wgt_M_instance_7_V_fu_809_p4 = {{weights_m_weights_V_q0[15:14]}};

assign wgt_M_instance_8_V_fu_819_p4 = {{weights_m_weights_V_q0[17:16]}};

assign wgt_M_instance_9_V_fu_829_p4 = {{weights_m_weights_V_q0[19:18]}};

assign xor_ln899_1_fu_1708_p2 = (icmp_ln899_1_fu_1703_p2 ^ 1'd1);

assign xor_ln899_2_fu_1726_p2 = (icmp_ln899_2_fu_1721_p2 ^ 1'd1);

assign xor_ln899_fu_1686_p2 = (icmp_ln899_fu_1681_p2 ^ 1'd1);

assign zext_ln137_fu_654_p1 = tile_assign_fu_162;

assign zext_ln186_1_fu_1718_p1 = threshs_m_thresholds_8_reg_1900;

assign zext_ln186_fu_690_p1 = nf_assign_fu_170;

assign zext_ln700_1_fu_1714_p1 = xor_ln899_1_fu_1708_p2;

assign zext_ln700_2_fu_1732_p1 = xor_ln899_2_fu_1726_p2;

assign zext_ln700_fu_1692_p1 = xor_ln899_fu_1686_p2;

endmodule //StreamingFCLayer_Batch_2_Matrix_Vector_Activa
