// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_1_Matrix_Vector_Activa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY,
        weights_m_weights_V_address0,
        weights_m_weights_V_ce0,
        weights_m_weights_V_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [7:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;
output  [7:0] weights_m_weights_V_address0;
output   weights_m_weights_V_ce0;
input  [31:0] weights_m_weights_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_TREADY;
reg out_V_V_TVALID;
reg weights_m_weights_V_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] threshs_m_thresholds_2_address0;
reg    threshs_m_thresholds_2_ce0;
wire   [4:0] threshs_m_thresholds_2_q0;
wire   [4:0] threshs_m_thresholds_1_address0;
reg    threshs_m_thresholds_1_ce0;
wire   [4:0] threshs_m_thresholds_1_q0;
wire   [4:0] threshs_m_thresholds_address0;
reg    threshs_m_thresholds_ce0;
wire   [4:0] threshs_m_thresholds_q0;
reg    in_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln122_fu_292_p2;
wire   [0:0] icmp_ln125_fu_307_p2;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln160_reg_1710;
reg   [0:0] icmp_ln160_reg_1710_pp0_iter1_reg;
reg   [14:0] i_0_reg_257;
reg    ap_predicate_op48_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
wire   [14:0] i_fu_298_p2;
wire   [31:0] inElem_V_fu_347_p11;
wire   [0:0] icmp_ln137_fu_684_p2;
reg   [0:0] icmp_ln137_reg_1700;
wire   [0:0] icmp_ln160_fu_707_p2;
wire   [9:0] add_ln700_15_fu_1511_p2;
reg   [9:0] add_ln700_15_reg_1729;
reg   [4:0] threshs_m_thresholds_4_reg_1736;
reg   [4:0] threshs_m_thresholds_6_reg_1741;
reg   [4:0] threshs_m_thresholds_8_reg_1746;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_268;
reg   [31:0] ap_phi_reg_pp0_iter1_act_m_val_V_reg_268;
wire   [63:0] zext_ln137_fu_690_p1;
wire   [63:0] zext_ln186_fu_726_p1;
reg   [9:0] accu_V_0_0_0_fu_140;
reg   [31:0] tile_assign_fu_144;
wire   [31:0] tile_fu_695_p2;
wire   [31:0] tile_1_fu_753_p3;
reg   [31:0] sf_1_fu_148;
wire   [31:0] sf_fu_701_p2;
reg   [31:0] nf_assign_fu_152;
wire   [31:0] nf_1_fu_745_p3;
reg   [31:0] inputBuf_8_V_1_fu_156;
wire   [31:0] inputBuf_8_V_19_fu_625_p3;
reg   [31:0] inputBuf_8_V_2_fu_160;
wire   [31:0] inputBuf_8_V_18_fu_617_p3;
reg   [31:0] inputBuf_8_V_4_fu_164;
wire   [31:0] inputBuf_8_V_16_fu_601_p3;
reg   [31:0] inputBuf_8_V_6_fu_168;
wire   [31:0] inputBuf_8_V_15_fu_585_p3;
reg   [31:0] inputBuf_8_V_7_fu_172;
wire   [31:0] inputBuf_8_V_14_fu_561_p3;
reg   [31:0] inputBuf_8_V_5_fu_176;
wire   [31:0] inputBuf_8_V_13_fu_545_p3;
reg   [31:0] inputBuf_8_V_3_fu_180;
wire   [31:0] inputBuf_8_V_12_fu_521_p3;
reg   [31:0] inputBuf_8_V_8_fu_184;
wire   [31:0] inputBuf_8_V_11_fu_497_p3;
reg   [31:0] inputBuf_8_V_9_fu_188;
wire   [31:0] inputBuf_8_V_fu_465_p3;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] inElem_V_fu_347_p10;
wire   [3:0] trunc_ln321_fu_371_p1;
wire   [0:0] icmp_ln321_7_fu_417_p2;
wire   [0:0] icmp_ln321_6_fu_411_p2;
wire   [0:0] icmp_ln321_5_fu_405_p2;
wire   [0:0] icmp_ln321_4_fu_399_p2;
wire   [0:0] icmp_ln321_3_fu_393_p2;
wire   [0:0] icmp_ln321_2_fu_387_p2;
wire   [0:0] icmp_ln321_1_fu_381_p2;
wire   [0:0] icmp_ln321_fu_375_p2;
wire   [0:0] or_ln321_fu_423_p2;
wire   [0:0] or_ln321_1_fu_429_p2;
wire   [0:0] or_ln321_2_fu_435_p2;
wire   [0:0] or_ln321_3_fu_441_p2;
wire   [0:0] or_ln321_4_fu_447_p2;
wire   [0:0] or_ln321_5_fu_453_p2;
wire   [0:0] or_ln321_6_fu_459_p2;
wire   [31:0] select_ln321_fu_473_p3;
wire   [31:0] select_ln321_1_fu_481_p3;
wire   [31:0] select_ln321_2_fu_489_p3;
wire   [31:0] select_ln321_4_fu_505_p3;
wire   [31:0] select_ln321_5_fu_513_p3;
wire   [31:0] select_ln321_7_fu_529_p3;
wire   [31:0] select_ln321_8_fu_537_p3;
wire   [31:0] select_ln321_10_fu_553_p3;
wire   [31:0] select_ln321_12_fu_569_p3;
wire   [31:0] select_ln321_13_fu_577_p3;
wire   [31:0] select_ln321_15_fu_593_p3;
wire   [31:0] inputBuf_8_V_17_fu_609_p3;
wire   [31:0] nf_fu_733_p2;
wire   [0:0] icmp_ln173_fu_739_p2;
wire  signed [1:0] wgt_M_instance_0_V_fu_781_p1;
wire   [1:0] trunc_ln647_fu_935_p1;
wire   [1:0] mul_ln1352_fu_947_p0;
wire  signed [3:0] mul_ln1352_fu_947_p2;
wire  signed [1:0] wgt_M_instance_1_V_fu_785_p4;
wire   [1:0] arg_V_read_assign_1_fu_957_p4;
wire   [1:0] mul_ln1352_1_fu_975_p0;
wire  signed [3:0] mul_ln1352_1_fu_975_p2;
wire  signed [1:0] wgt_M_instance_2_V_fu_795_p4;
wire   [1:0] arg_V_read_assign_2_fu_985_p4;
wire   [1:0] mul_ln1352_2_fu_1003_p0;
wire  signed [3:0] mul_ln1352_2_fu_1003_p2;
wire  signed [1:0] wgt_M_instance_3_V_fu_805_p4;
wire   [1:0] arg_V_read_assign_3_fu_1013_p4;
wire   [1:0] mul_ln1352_3_fu_1031_p0;
wire  signed [3:0] mul_ln1352_3_fu_1031_p2;
wire  signed [1:0] wgt_M_instance_4_V_fu_815_p4;
wire   [1:0] arg_V_read_assign_4_fu_1041_p4;
wire   [1:0] mul_ln1352_4_fu_1059_p0;
wire  signed [3:0] mul_ln1352_4_fu_1059_p2;
wire  signed [1:0] wgt_M_instance_5_V_fu_825_p4;
wire   [1:0] arg_V_read_assign_5_fu_1069_p4;
wire   [1:0] mul_ln1352_5_fu_1087_p0;
wire  signed [3:0] mul_ln1352_5_fu_1087_p2;
wire  signed [1:0] wgt_M_instance_6_V_fu_835_p4;
wire   [1:0] arg_V_read_assign_6_fu_1097_p4;
wire   [1:0] mul_ln1352_6_fu_1115_p0;
wire  signed [3:0] mul_ln1352_6_fu_1115_p2;
wire  signed [1:0] wgt_M_instance_7_V_fu_845_p4;
wire   [1:0] arg_V_read_assign_7_fu_1125_p4;
wire   [1:0] mul_ln1352_7_fu_1143_p0;
wire  signed [3:0] mul_ln1352_7_fu_1143_p2;
wire  signed [1:0] wgt_M_instance_8_V_fu_855_p4;
wire   [1:0] arg_V_read_assign_8_fu_1153_p4;
wire   [1:0] mul_ln1352_8_fu_1171_p0;
wire  signed [3:0] mul_ln1352_8_fu_1171_p2;
wire  signed [1:0] wgt_M_instance_9_V_fu_865_p4;
wire   [1:0] arg_V_read_assign_9_fu_1181_p4;
wire   [1:0] mul_ln1352_9_fu_1199_p0;
wire  signed [3:0] mul_ln1352_9_fu_1199_p2;
wire  signed [1:0] wgt_M_instance_10_s_fu_875_p4;
wire   [1:0] arg_V_read_assign_s_fu_1209_p4;
wire   [1:0] mul_ln1352_10_fu_1227_p0;
wire  signed [3:0] mul_ln1352_10_fu_1227_p2;
wire  signed [1:0] p_Result_s_fu_885_p4;
wire   [1:0] arg_V_read_assign_10_fu_1237_p4;
wire   [1:0] mul_ln1352_11_fu_1255_p0;
wire  signed [3:0] mul_ln1352_11_fu_1255_p2;
wire  signed [1:0] p_Result_1_fu_895_p4;
wire   [1:0] arg_V_read_assign_11_fu_1265_p4;
wire   [1:0] mul_ln1352_12_fu_1283_p0;
wire  signed [3:0] mul_ln1352_12_fu_1283_p2;
wire  signed [1:0] p_Result_2_fu_905_p4;
wire   [1:0] arg_V_read_assign_12_fu_1293_p4;
wire   [1:0] mul_ln1352_13_fu_1311_p0;
wire  signed [3:0] mul_ln1352_13_fu_1311_p2;
wire  signed [1:0] p_Result_3_fu_915_p4;
wire   [1:0] arg_V_read_assign_13_fu_1321_p4;
wire   [1:0] mul_ln1352_14_fu_1339_p0;
wire  signed [3:0] mul_ln1352_14_fu_1339_p2;
wire  signed [1:0] p_Result_4_fu_925_p4;
wire   [1:0] arg_V_read_assign_14_fu_1349_p4;
wire   [1:0] mul_ln1352_15_fu_1367_p0;
wire  signed [3:0] mul_ln1352_15_fu_1367_p2;
wire  signed [9:0] sext_ln700_fu_1317_p1;
wire   [9:0] res_V_fu_774_p3;
wire  signed [4:0] sext_ln170_12_fu_1289_p1;
wire  signed [4:0] sext_ln170_13_fu_1345_p1;
wire   [4:0] add_ln700_1_fu_1383_p2;
wire   [9:0] add_ln700_fu_1377_p2;
wire  signed [9:0] sext_ln700_2_fu_1389_p1;
wire  signed [4:0] sext_ln170_8_fu_1177_p1;
wire  signed [4:0] sext_ln170_11_fu_1261_p1;
wire   [4:0] add_ln700_3_fu_1399_p2;
wire  signed [4:0] sext_ln170_10_fu_1233_p1;
wire  signed [4:0] sext_ln170_7_fu_1149_p1;
wire   [4:0] add_ln700_4_fu_1409_p2;
wire  signed [5:0] sext_ln700_3_fu_1405_p1;
wire  signed [5:0] sext_ln700_4_fu_1415_p1;
wire   [5:0] add_ln700_5_fu_1419_p2;
wire   [9:0] add_ln700_2_fu_1393_p2;
wire  signed [9:0] sext_ln700_5_fu_1425_p1;
wire  signed [4:0] sext_ln170_fu_953_p1;
wire  signed [4:0] sext_ln170_9_fu_1205_p1;
wire   [4:0] add_ln700_7_fu_1435_p2;
wire  signed [4:0] sext_ln170_1_fu_981_p1;
wire  signed [4:0] sext_ln170_2_fu_1009_p1;
wire   [4:0] add_ln700_8_fu_1445_p2;
wire  signed [5:0] sext_ln700_6_fu_1441_p1;
wire  signed [5:0] sext_ln700_7_fu_1451_p1;
wire   [5:0] add_ln700_9_fu_1455_p2;
wire  signed [4:0] sext_ln170_3_fu_1037_p1;
wire  signed [4:0] sext_ln170_4_fu_1065_p1;
wire   [4:0] add_ln700_10_fu_1465_p2;
wire  signed [4:0] sext_ln700_1_fu_1373_p1;
wire  signed [4:0] sext_ln170_5_fu_1093_p1;
wire   [4:0] add_ln700_11_fu_1475_p2;
wire  signed [5:0] sext_ln170_6_fu_1121_p1;
wire  signed [5:0] sext_ln700_10_fu_1481_p1;
wire  signed [5:0] sext_ln700_9_fu_1471_p1;
wire   [5:0] add_ln700_12_fu_1485_p2;
wire   [5:0] add_ln700_13_fu_1491_p2;
wire  signed [6:0] sext_ln700_8_fu_1461_p1;
wire  signed [6:0] sext_ln700_11_fu_1497_p1;
wire   [6:0] add_ln700_14_fu_1501_p2;
wire   [9:0] add_ln700_6_fu_1429_p2;
wire  signed [9:0] sext_ln700_12_fu_1507_p1;
wire  signed [9:0] sext_ln186_fu_1522_p1;
wire   [0:0] icmp_ln899_fu_1525_p2;
wire   [0:0] xor_ln899_fu_1530_p2;
wire   [9:0] zext_ln186_1_fu_1540_p1;
wire   [0:0] icmp_ln899_1_fu_1543_p2;
wire   [0:0] xor_ln899_1_fu_1548_p2;
wire   [9:0] zext_ln186_2_fu_1558_p1;
wire   [0:0] icmp_ln899_2_fu_1561_p2;
wire   [0:0] xor_ln899_2_fu_1566_p2;
wire   [1:0] zext_ln700_1_fu_1554_p1;
wire   [1:0] zext_ln700_2_fu_1572_p1;
wire   [1:0] add_ln700_16_fu_1576_p2;
wire   [1:0] zext_ln700_fu_1536_p1;
wire   [1:0] tmp_V_fu_1582_p2;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [3:0] mul_ln1352_10_fu_1227_p00;
wire   [3:0] mul_ln1352_11_fu_1255_p00;
wire   [3:0] mul_ln1352_12_fu_1283_p00;
wire   [3:0] mul_ln1352_13_fu_1311_p00;
wire   [3:0] mul_ln1352_14_fu_1339_p00;
wire   [3:0] mul_ln1352_15_fu_1367_p00;
wire   [3:0] mul_ln1352_1_fu_975_p00;
wire   [3:0] mul_ln1352_2_fu_1003_p00;
wire   [3:0] mul_ln1352_3_fu_1031_p00;
wire   [3:0] mul_ln1352_4_fu_1059_p00;
wire   [3:0] mul_ln1352_5_fu_1087_p00;
wire   [3:0] mul_ln1352_6_fu_1115_p00;
wire   [3:0] mul_ln1352_7_fu_1143_p00;
wire   [3:0] mul_ln1352_8_fu_1171_p00;
wire   [3:0] mul_ln1352_9_fu_1199_p00;
wire   [3:0] mul_ln1352_fu_947_p00;
reg    ap_condition_113;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

StreamingFCLayer_Batch_1_Matrix_Vector_Actbkb #(
    .DataWidth( 5 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_2_address0),
    .ce0(threshs_m_thresholds_2_ce0),
    .q0(threshs_m_thresholds_2_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actcud #(
    .DataWidth( 5 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_1_address0),
    .ce0(threshs_m_thresholds_1_ce0),
    .q0(threshs_m_thresholds_1_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActdEe #(
    .DataWidth( 5 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_address0),
    .ce0(threshs_m_thresholds_ce0),
    .q0(threshs_m_thresholds_q0)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
StreamingFCLayer_eOg_U1(
    .din0(inputBuf_8_V_1_fu_156),
    .din1(inputBuf_8_V_2_fu_160),
    .din2(inputBuf_8_V_4_fu_164),
    .din3(inputBuf_8_V_6_fu_168),
    .din4(inputBuf_8_V_7_fu_172),
    .din5(inputBuf_8_V_5_fu_176),
    .din6(inputBuf_8_V_3_fu_180),
    .din7(inputBuf_8_V_8_fu_184),
    .din8(inputBuf_8_V_9_fu_188),
    .din9(inElem_V_fu_347_p10),
    .dout(inElem_V_fu_347_p11)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U2(
    .din0(mul_ln1352_fu_947_p0),
    .din1(wgt_M_instance_0_V_fu_781_p1),
    .dout(mul_ln1352_fu_947_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U3(
    .din0(mul_ln1352_1_fu_975_p0),
    .din1(wgt_M_instance_1_V_fu_785_p4),
    .dout(mul_ln1352_1_fu_975_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U4(
    .din0(mul_ln1352_2_fu_1003_p0),
    .din1(wgt_M_instance_2_V_fu_795_p4),
    .dout(mul_ln1352_2_fu_1003_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U5(
    .din0(mul_ln1352_3_fu_1031_p0),
    .din1(wgt_M_instance_3_V_fu_805_p4),
    .dout(mul_ln1352_3_fu_1031_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U6(
    .din0(mul_ln1352_4_fu_1059_p0),
    .din1(wgt_M_instance_4_V_fu_815_p4),
    .dout(mul_ln1352_4_fu_1059_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U7(
    .din0(mul_ln1352_5_fu_1087_p0),
    .din1(wgt_M_instance_5_V_fu_825_p4),
    .dout(mul_ln1352_5_fu_1087_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U8(
    .din0(mul_ln1352_6_fu_1115_p0),
    .din1(wgt_M_instance_6_V_fu_835_p4),
    .dout(mul_ln1352_6_fu_1115_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U9(
    .din0(mul_ln1352_7_fu_1143_p0),
    .din1(wgt_M_instance_7_V_fu_845_p4),
    .dout(mul_ln1352_7_fu_1143_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U10(
    .din0(mul_ln1352_8_fu_1171_p0),
    .din1(wgt_M_instance_8_V_fu_855_p4),
    .dout(mul_ln1352_8_fu_1171_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U11(
    .din0(mul_ln1352_9_fu_1199_p0),
    .din1(wgt_M_instance_9_V_fu_865_p4),
    .dout(mul_ln1352_9_fu_1199_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U12(
    .din0(mul_ln1352_10_fu_1227_p0),
    .din1(wgt_M_instance_10_s_fu_875_p4),
    .dout(mul_ln1352_10_fu_1227_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U13(
    .din0(mul_ln1352_11_fu_1255_p0),
    .din1(p_Result_s_fu_885_p4),
    .dout(mul_ln1352_11_fu_1255_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U14(
    .din0(mul_ln1352_12_fu_1283_p0),
    .din1(p_Result_1_fu_895_p4),
    .dout(mul_ln1352_12_fu_1283_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U15(
    .din0(mul_ln1352_13_fu_1311_p0),
    .din1(p_Result_2_fu_905_p4),
    .dout(mul_ln1352_13_fu_1311_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U16(
    .din0(mul_ln1352_14_fu_1339_p0),
    .din1(p_Result_3_fu_915_p4),
    .dout(mul_ln1352_14_fu_1339_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
StreamingFCLayer_fYi_U17(
    .din0(mul_ln1352_15_fu_1367_p0),
    .din1(p_Result_4_fu_925_p4),
    .dout(mul_ln1352_15_fu_1367_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_113)) begin
        if (((icmp_ln125_fu_307_p2 == 1'd0) & (icmp_ln122_fu_292_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_268 <= inElem_V_fu_347_p11;
        end else if (((icmp_ln125_fu_307_p2 == 1'd1) & (icmp_ln122_fu_292_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_268 <= in_V_V_TDATA;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_268 <= ap_phi_reg_pp0_iter0_act_m_val_V_reg_268;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_257 <= i_fu_298_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_257 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_707_p2 == 1'd1) & (icmp_ln122_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nf_assign_fu_152 <= nf_1_fu_745_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_152 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_707_p2 == 1'd0) & (icmp_ln122_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_1_fu_148 <= sf_fu_701_p2;
    end else if ((((icmp_ln160_fu_707_p2 == 1'd1) & (icmp_ln122_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_1_fu_148 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_707_p2 == 1'd1) & (icmp_ln122_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tile_assign_fu_144 <= tile_1_fu_753_p3;
    end else if (((icmp_ln160_fu_707_p2 == 1'd0) & (icmp_ln122_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tile_assign_fu_144 <= tile_fu_695_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_assign_fu_144 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accu_V_0_0_0_fu_140 <= add_ln700_15_fu_1511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln700_15_reg_1729 <= add_ln700_15_fu_1511_p2;
        icmp_ln160_reg_1710_pp0_iter1_reg <= icmp_ln160_reg_1710;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln137_reg_1700 <= icmp_ln137_fu_684_p2;
        icmp_ln160_reg_1710 <= icmp_ln160_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_307_p2 == 1'd1) & (icmp_ln122_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_8_V_1_fu_156 <= inputBuf_8_V_19_fu_625_p3;
        inputBuf_8_V_2_fu_160 <= inputBuf_8_V_18_fu_617_p3;
        inputBuf_8_V_3_fu_180 <= inputBuf_8_V_12_fu_521_p3;
        inputBuf_8_V_4_fu_164 <= inputBuf_8_V_16_fu_601_p3;
        inputBuf_8_V_5_fu_176 <= inputBuf_8_V_13_fu_545_p3;
        inputBuf_8_V_6_fu_168 <= inputBuf_8_V_15_fu_585_p3;
        inputBuf_8_V_7_fu_172 <= inputBuf_8_V_14_fu_561_p3;
        inputBuf_8_V_8_fu_184 <= inputBuf_8_V_11_fu_497_p3;
        inputBuf_8_V_9_fu_188 <= inputBuf_8_V_fu_465_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_reg_1710 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_4_reg_1736 <= threshs_m_thresholds_2_q0;
        threshs_m_thresholds_6_reg_1741 <= threshs_m_thresholds_1_q0;
        threshs_m_thresholds_8_reg_1746 <= threshs_m_thresholds_q0;
    end
end

always @ (*) begin
    if ((icmp_ln122_fu_292_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln125_fu_307_p2 == 1'd1) & (icmp_ln122_fu_292_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_TDATA_blk_n = in_V_V_TVALID;
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_TREADY = 1'b1;
    end else begin
        in_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_reg_1710_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln160_reg_1710_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_1_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_2_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_m_weights_V_ce0 = 1'b1;
    end else begin
        weights_m_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln122_fu_292_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln122_fu_292_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_10_fu_1465_p2 = ($signed(sext_ln170_3_fu_1037_p1) + $signed(sext_ln170_4_fu_1065_p1));

assign add_ln700_11_fu_1475_p2 = ($signed(sext_ln700_1_fu_1373_p1) + $signed(sext_ln170_5_fu_1093_p1));

assign add_ln700_12_fu_1485_p2 = ($signed(sext_ln170_6_fu_1121_p1) + $signed(sext_ln700_10_fu_1481_p1));

assign add_ln700_13_fu_1491_p2 = ($signed(sext_ln700_9_fu_1471_p1) + $signed(add_ln700_12_fu_1485_p2));

assign add_ln700_14_fu_1501_p2 = ($signed(sext_ln700_8_fu_1461_p1) + $signed(sext_ln700_11_fu_1497_p1));

assign add_ln700_15_fu_1511_p2 = ($signed(add_ln700_6_fu_1429_p2) + $signed(sext_ln700_12_fu_1507_p1));

assign add_ln700_16_fu_1576_p2 = (zext_ln700_1_fu_1554_p1 + zext_ln700_2_fu_1572_p1);

assign add_ln700_1_fu_1383_p2 = ($signed(sext_ln170_12_fu_1289_p1) + $signed(sext_ln170_13_fu_1345_p1));

assign add_ln700_2_fu_1393_p2 = ($signed(add_ln700_fu_1377_p2) + $signed(sext_ln700_2_fu_1389_p1));

assign add_ln700_3_fu_1399_p2 = ($signed(sext_ln170_8_fu_1177_p1) + $signed(sext_ln170_11_fu_1261_p1));

assign add_ln700_4_fu_1409_p2 = ($signed(sext_ln170_10_fu_1233_p1) + $signed(sext_ln170_7_fu_1149_p1));

assign add_ln700_5_fu_1419_p2 = ($signed(sext_ln700_3_fu_1405_p1) + $signed(sext_ln700_4_fu_1415_p1));

assign add_ln700_6_fu_1429_p2 = ($signed(add_ln700_2_fu_1393_p2) + $signed(sext_ln700_5_fu_1425_p1));

assign add_ln700_7_fu_1435_p2 = ($signed(sext_ln170_fu_953_p1) + $signed(sext_ln170_9_fu_1205_p1));

assign add_ln700_8_fu_1445_p2 = ($signed(sext_ln170_1_fu_981_p1) + $signed(sext_ln170_2_fu_1009_p1));

assign add_ln700_9_fu_1455_p2 = ($signed(sext_ln700_6_fu_1441_p1) + $signed(sext_ln700_7_fu_1451_p1));

assign add_ln700_fu_1377_p2 = ($signed(sext_ln700_fu_1317_p1) + $signed(res_V_fu_774_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op48_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op48_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op48_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((in_V_V_TVALID == 1'b0) & (ap_predicate_op48_read_state2 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((icmp_ln160_reg_1710_pp0_iter1_reg == 1'd1) & (out_V_V_TREADY == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_113 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_268 = 'bx;

always @ (*) begin
    ap_predicate_op48_read_state2 = ((icmp_ln125_fu_307_p2 == 1'd1) & (icmp_ln122_fu_292_p2 == 1'd0));
end

assign arg_V_read_assign_10_fu_1237_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[23:22]}};

assign arg_V_read_assign_11_fu_1265_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[25:24]}};

assign arg_V_read_assign_12_fu_1293_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[27:26]}};

assign arg_V_read_assign_13_fu_1321_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[29:28]}};

assign arg_V_read_assign_14_fu_1349_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[31:30]}};

assign arg_V_read_assign_1_fu_957_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[3:2]}};

assign arg_V_read_assign_2_fu_985_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[5:4]}};

assign arg_V_read_assign_3_fu_1013_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[7:6]}};

assign arg_V_read_assign_4_fu_1041_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[9:8]}};

assign arg_V_read_assign_5_fu_1069_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[11:10]}};

assign arg_V_read_assign_6_fu_1097_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[13:12]}};

assign arg_V_read_assign_7_fu_1125_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[15:14]}};

assign arg_V_read_assign_8_fu_1153_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[17:16]}};

assign arg_V_read_assign_9_fu_1181_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[19:18]}};

assign arg_V_read_assign_s_fu_1209_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[21:20]}};

assign i_fu_298_p2 = (i_0_reg_257 + 15'd1);

assign icmp_ln122_fu_292_p2 = ((i_0_reg_257 == 15'd25920) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_307_p2 = ((nf_assign_fu_152 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_684_p2 = ((sf_1_fu_148 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_707_p2 = ((sf_fu_701_p2 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_739_p2 = ((nf_fu_733_p2 == 32'd20) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_381_p2 = ((trunc_ln321_fu_371_p1 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_387_p2 = ((trunc_ln321_fu_371_p1 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_3_fu_393_p2 = ((trunc_ln321_fu_371_p1 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_4_fu_399_p2 = ((trunc_ln321_fu_371_p1 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_5_fu_405_p2 = ((trunc_ln321_fu_371_p1 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_6_fu_411_p2 = ((trunc_ln321_fu_371_p1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_7_fu_417_p2 = ((trunc_ln321_fu_371_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_375_p2 = ((trunc_ln321_fu_371_p1 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_1543_p2 = (($signed(add_ln700_15_reg_1729) < $signed(zext_ln186_1_fu_1540_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_1561_p2 = (($signed(add_ln700_15_reg_1729) < $signed(zext_ln186_2_fu_1558_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_1525_p2 = (($signed(add_ln700_15_reg_1729) < $signed(sext_ln186_fu_1522_p1)) ? 1'b1 : 1'b0);

assign inElem_V_fu_347_p10 = sf_1_fu_148[3:0];

assign inputBuf_8_V_11_fu_497_p3 = ((or_ln321_6_fu_459_p2[0:0] === 1'b1) ? select_ln321_2_fu_489_p3 : inputBuf_8_V_8_fu_184);

assign inputBuf_8_V_12_fu_521_p3 = ((or_ln321_4_fu_447_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_180 : select_ln321_5_fu_513_p3);

assign inputBuf_8_V_13_fu_545_p3 = ((or_ln321_4_fu_447_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_176 : select_ln321_8_fu_537_p3);

assign inputBuf_8_V_14_fu_561_p3 = ((or_ln321_4_fu_447_p2[0:0] === 1'b1) ? inputBuf_8_V_7_fu_172 : select_ln321_10_fu_553_p3);

assign inputBuf_8_V_15_fu_585_p3 = ((or_ln321_4_fu_447_p2[0:0] === 1'b1) ? select_ln321_13_fu_577_p3 : inputBuf_8_V_6_fu_168);

assign inputBuf_8_V_16_fu_601_p3 = ((or_ln321_fu_423_p2[0:0] === 1'b1) ? inputBuf_8_V_4_fu_164 : select_ln321_15_fu_593_p3);

assign inputBuf_8_V_17_fu_609_p3 = ((icmp_ln321_6_fu_411_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_2_fu_160);

assign inputBuf_8_V_18_fu_617_p3 = ((icmp_ln321_7_fu_417_p2[0:0] === 1'b1) ? inputBuf_8_V_2_fu_160 : inputBuf_8_V_17_fu_609_p3);

assign inputBuf_8_V_19_fu_625_p3 = ((icmp_ln321_7_fu_417_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_1_fu_156);

assign inputBuf_8_V_fu_465_p3 = ((or_ln321_6_fu_459_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_188 : in_V_V_TDATA);

assign mul_ln1352_10_fu_1227_p0 = mul_ln1352_10_fu_1227_p00;

assign mul_ln1352_10_fu_1227_p00 = arg_V_read_assign_s_fu_1209_p4;

assign mul_ln1352_11_fu_1255_p0 = mul_ln1352_11_fu_1255_p00;

assign mul_ln1352_11_fu_1255_p00 = arg_V_read_assign_10_fu_1237_p4;

assign mul_ln1352_12_fu_1283_p0 = mul_ln1352_12_fu_1283_p00;

assign mul_ln1352_12_fu_1283_p00 = arg_V_read_assign_11_fu_1265_p4;

assign mul_ln1352_13_fu_1311_p0 = mul_ln1352_13_fu_1311_p00;

assign mul_ln1352_13_fu_1311_p00 = arg_V_read_assign_12_fu_1293_p4;

assign mul_ln1352_14_fu_1339_p0 = mul_ln1352_14_fu_1339_p00;

assign mul_ln1352_14_fu_1339_p00 = arg_V_read_assign_13_fu_1321_p4;

assign mul_ln1352_15_fu_1367_p0 = mul_ln1352_15_fu_1367_p00;

assign mul_ln1352_15_fu_1367_p00 = arg_V_read_assign_14_fu_1349_p4;

assign mul_ln1352_1_fu_975_p0 = mul_ln1352_1_fu_975_p00;

assign mul_ln1352_1_fu_975_p00 = arg_V_read_assign_1_fu_957_p4;

assign mul_ln1352_2_fu_1003_p0 = mul_ln1352_2_fu_1003_p00;

assign mul_ln1352_2_fu_1003_p00 = arg_V_read_assign_2_fu_985_p4;

assign mul_ln1352_3_fu_1031_p0 = mul_ln1352_3_fu_1031_p00;

assign mul_ln1352_3_fu_1031_p00 = arg_V_read_assign_3_fu_1013_p4;

assign mul_ln1352_4_fu_1059_p0 = mul_ln1352_4_fu_1059_p00;

assign mul_ln1352_4_fu_1059_p00 = arg_V_read_assign_4_fu_1041_p4;

assign mul_ln1352_5_fu_1087_p0 = mul_ln1352_5_fu_1087_p00;

assign mul_ln1352_5_fu_1087_p00 = arg_V_read_assign_5_fu_1069_p4;

assign mul_ln1352_6_fu_1115_p0 = mul_ln1352_6_fu_1115_p00;

assign mul_ln1352_6_fu_1115_p00 = arg_V_read_assign_6_fu_1097_p4;

assign mul_ln1352_7_fu_1143_p0 = mul_ln1352_7_fu_1143_p00;

assign mul_ln1352_7_fu_1143_p00 = arg_V_read_assign_7_fu_1125_p4;

assign mul_ln1352_8_fu_1171_p0 = mul_ln1352_8_fu_1171_p00;

assign mul_ln1352_8_fu_1171_p00 = arg_V_read_assign_8_fu_1153_p4;

assign mul_ln1352_9_fu_1199_p0 = mul_ln1352_9_fu_1199_p00;

assign mul_ln1352_9_fu_1199_p00 = arg_V_read_assign_9_fu_1181_p4;

assign mul_ln1352_fu_947_p0 = mul_ln1352_fu_947_p00;

assign mul_ln1352_fu_947_p00 = trunc_ln647_fu_935_p1;

assign nf_1_fu_745_p3 = ((icmp_ln173_fu_739_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_733_p2);

assign nf_fu_733_p2 = (nf_assign_fu_152 + 32'd1);

assign or_ln321_1_fu_429_p2 = (icmp_ln321_5_fu_405_p2 | icmp_ln321_4_fu_399_p2);

assign or_ln321_2_fu_435_p2 = (icmp_ln321_3_fu_393_p2 | icmp_ln321_2_fu_387_p2);

assign or_ln321_3_fu_441_p2 = (icmp_ln321_fu_375_p2 | icmp_ln321_1_fu_381_p2);

assign or_ln321_4_fu_447_p2 = (or_ln321_fu_423_p2 | or_ln321_1_fu_429_p2);

assign or_ln321_5_fu_453_p2 = (or_ln321_3_fu_441_p2 | or_ln321_2_fu_435_p2);

assign or_ln321_6_fu_459_p2 = (or_ln321_5_fu_453_p2 | or_ln321_4_fu_447_p2);

assign or_ln321_fu_423_p2 = (icmp_ln321_7_fu_417_p2 | icmp_ln321_6_fu_411_p2);

assign out_V_V_TDATA = tmp_V_fu_1582_p2;

assign p_Result_1_fu_895_p4 = {{weights_m_weights_V_q0[25:24]}};

assign p_Result_2_fu_905_p4 = {{weights_m_weights_V_q0[27:26]}};

assign p_Result_3_fu_915_p4 = {{weights_m_weights_V_q0[29:28]}};

assign p_Result_4_fu_925_p4 = {{weights_m_weights_V_q0[31:30]}};

assign p_Result_s_fu_885_p4 = {{weights_m_weights_V_q0[23:22]}};

assign res_V_fu_774_p3 = ((icmp_ln137_reg_1700[0:0] === 1'b1) ? 10'd0 : accu_V_0_0_0_fu_140);

assign select_ln321_10_fu_553_p3 = ((icmp_ln321_3_fu_393_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_7_fu_172);

assign select_ln321_12_fu_569_p3 = ((icmp_ln321_5_fu_405_p2[0:0] === 1'b1) ? inputBuf_8_V_6_fu_168 : in_V_V_TDATA);

assign select_ln321_13_fu_577_p3 = ((or_ln321_fu_423_p2[0:0] === 1'b1) ? inputBuf_8_V_6_fu_168 : select_ln321_12_fu_569_p3);

assign select_ln321_15_fu_593_p3 = ((icmp_ln321_5_fu_405_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_4_fu_164);

assign select_ln321_1_fu_481_p3 = ((or_ln321_2_fu_435_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_184 : select_ln321_fu_473_p3);

assign select_ln321_2_fu_489_p3 = ((or_ln321_4_fu_447_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_184 : select_ln321_1_fu_481_p3);

assign select_ln321_4_fu_505_p3 = ((icmp_ln321_1_fu_381_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_3_fu_180);

assign select_ln321_5_fu_513_p3 = ((or_ln321_2_fu_435_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_180 : select_ln321_4_fu_505_p3);

assign select_ln321_7_fu_529_p3 = ((icmp_ln321_3_fu_393_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_176 : in_V_V_TDATA);

assign select_ln321_8_fu_537_p3 = ((or_ln321_2_fu_435_p2[0:0] === 1'b1) ? select_ln321_7_fu_529_p3 : inputBuf_8_V_5_fu_176);

assign select_ln321_fu_473_p3 = ((icmp_ln321_1_fu_381_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_184 : in_V_V_TDATA);

assign sext_ln170_10_fu_1233_p1 = mul_ln1352_10_fu_1227_p2;

assign sext_ln170_11_fu_1261_p1 = mul_ln1352_11_fu_1255_p2;

assign sext_ln170_12_fu_1289_p1 = mul_ln1352_12_fu_1283_p2;

assign sext_ln170_13_fu_1345_p1 = mul_ln1352_14_fu_1339_p2;

assign sext_ln170_1_fu_981_p1 = mul_ln1352_1_fu_975_p2;

assign sext_ln170_2_fu_1009_p1 = mul_ln1352_2_fu_1003_p2;

assign sext_ln170_3_fu_1037_p1 = mul_ln1352_3_fu_1031_p2;

assign sext_ln170_4_fu_1065_p1 = mul_ln1352_4_fu_1059_p2;

assign sext_ln170_5_fu_1093_p1 = mul_ln1352_5_fu_1087_p2;

assign sext_ln170_6_fu_1121_p1 = mul_ln1352_6_fu_1115_p2;

assign sext_ln170_7_fu_1149_p1 = mul_ln1352_7_fu_1143_p2;

assign sext_ln170_8_fu_1177_p1 = mul_ln1352_8_fu_1171_p2;

assign sext_ln170_9_fu_1205_p1 = mul_ln1352_9_fu_1199_p2;

assign sext_ln170_fu_953_p1 = mul_ln1352_fu_947_p2;

assign sext_ln186_fu_1522_p1 = $signed(threshs_m_thresholds_4_reg_1736);

assign sext_ln700_10_fu_1481_p1 = $signed(add_ln700_11_fu_1475_p2);

assign sext_ln700_11_fu_1497_p1 = $signed(add_ln700_13_fu_1491_p2);

assign sext_ln700_12_fu_1507_p1 = $signed(add_ln700_14_fu_1501_p2);

assign sext_ln700_1_fu_1373_p1 = mul_ln1352_15_fu_1367_p2;

assign sext_ln700_2_fu_1389_p1 = $signed(add_ln700_1_fu_1383_p2);

assign sext_ln700_3_fu_1405_p1 = $signed(add_ln700_3_fu_1399_p2);

assign sext_ln700_4_fu_1415_p1 = $signed(add_ln700_4_fu_1409_p2);

assign sext_ln700_5_fu_1425_p1 = $signed(add_ln700_5_fu_1419_p2);

assign sext_ln700_6_fu_1441_p1 = $signed(add_ln700_7_fu_1435_p2);

assign sext_ln700_7_fu_1451_p1 = $signed(add_ln700_8_fu_1445_p2);

assign sext_ln700_8_fu_1461_p1 = $signed(add_ln700_9_fu_1455_p2);

assign sext_ln700_9_fu_1471_p1 = $signed(add_ln700_10_fu_1465_p2);

assign sext_ln700_fu_1317_p1 = mul_ln1352_13_fu_1311_p2;

assign sf_fu_701_p2 = (32'd1 + sf_1_fu_148);

assign threshs_m_thresholds_1_address0 = zext_ln186_fu_726_p1;

assign threshs_m_thresholds_2_address0 = zext_ln186_fu_726_p1;

assign threshs_m_thresholds_address0 = zext_ln186_fu_726_p1;

assign tile_1_fu_753_p3 = ((icmp_ln173_fu_739_p2[0:0] === 1'b1) ? 32'd0 : tile_fu_695_p2);

assign tile_fu_695_p2 = (32'd1 + tile_assign_fu_144);

assign tmp_V_fu_1582_p2 = (add_ln700_16_fu_1576_p2 + zext_ln700_fu_1536_p1);

assign trunc_ln321_fu_371_p1 = sf_1_fu_148[3:0];

assign trunc_ln647_fu_935_p1 = ap_phi_reg_pp0_iter1_act_m_val_V_reg_268[1:0];

assign weights_m_weights_V_address0 = zext_ln137_fu_690_p1;

assign wgt_M_instance_0_V_fu_781_p1 = weights_m_weights_V_q0[1:0];

assign wgt_M_instance_10_s_fu_875_p4 = {{weights_m_weights_V_q0[21:20]}};

assign wgt_M_instance_1_V_fu_785_p4 = {{weights_m_weights_V_q0[3:2]}};

assign wgt_M_instance_2_V_fu_795_p4 = {{weights_m_weights_V_q0[5:4]}};

assign wgt_M_instance_3_V_fu_805_p4 = {{weights_m_weights_V_q0[7:6]}};

assign wgt_M_instance_4_V_fu_815_p4 = {{weights_m_weights_V_q0[9:8]}};

assign wgt_M_instance_5_V_fu_825_p4 = {{weights_m_weights_V_q0[11:10]}};

assign wgt_M_instance_6_V_fu_835_p4 = {{weights_m_weights_V_q0[13:12]}};

assign wgt_M_instance_7_V_fu_845_p4 = {{weights_m_weights_V_q0[15:14]}};

assign wgt_M_instance_8_V_fu_855_p4 = {{weights_m_weights_V_q0[17:16]}};

assign wgt_M_instance_9_V_fu_865_p4 = {{weights_m_weights_V_q0[19:18]}};

assign xor_ln899_1_fu_1548_p2 = (icmp_ln899_1_fu_1543_p2 ^ 1'd1);

assign xor_ln899_2_fu_1566_p2 = (icmp_ln899_2_fu_1561_p2 ^ 1'd1);

assign xor_ln899_fu_1530_p2 = (icmp_ln899_fu_1525_p2 ^ 1'd1);

assign zext_ln137_fu_690_p1 = tile_assign_fu_144;

assign zext_ln186_1_fu_1540_p1 = threshs_m_thresholds_6_reg_1741;

assign zext_ln186_2_fu_1558_p1 = threshs_m_thresholds_8_reg_1746;

assign zext_ln186_fu_726_p1 = nf_assign_fu_152;

assign zext_ln700_1_fu_1554_p1 = xor_ln899_1_fu_1548_p2;

assign zext_ln700_2_fu_1572_p1 = xor_ln899_2_fu_1566_p2;

assign zext_ln700_fu_1536_p1 = xor_ln899_fu_1530_p2;

endmodule //StreamingFCLayer_Batch_1_Matrix_Vector_Activa
