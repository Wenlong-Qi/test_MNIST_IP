// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGenerator_1_ConvolutionInputGene_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [31:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_TREADY;
reg out_V_V_TVALID;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln196_fu_366_p2;
wire   [0:0] icmp_ln198_fu_388_p2;
wire   [0:0] and_ln244_fu_582_p2;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln198_reg_869;
reg   [0:0] icmp_ln214_reg_873;
reg   [10:0] i_0_0_reg_269;
reg    ap_predicate_op116_read_state2;
reg    ap_predicate_op159_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_predicate_op202_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] add_ln196_fu_372_p2;
wire   [0:0] icmp_ln214_fu_397_p2;
wire   [1:0] add_ln220_fu_455_p2;
reg   [1:0] add_ln220_reg_877;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire   [3:0] inputBuf_0_V_address0;
reg    inputBuf_0_V_ce0;
wire   [31:0] inputBuf_0_V_q0;
reg   [3:0] inputBuf_0_V_address1;
reg    inputBuf_0_V_ce1;
reg    inputBuf_0_V_we1;
wire   [3:0] inputBuf_1_V_address0;
reg    inputBuf_1_V_ce0;
wire   [31:0] inputBuf_1_V_q0;
reg   [3:0] inputBuf_1_V_address1;
reg    inputBuf_1_V_ce1;
reg    inputBuf_1_V_we1;
wire   [3:0] inputBuf_2_V_address0;
reg    inputBuf_2_V_ce0;
wire   [31:0] inputBuf_2_V_q0;
reg   [3:0] inputBuf_2_V_address1;
reg    inputBuf_2_V_ce1;
reg    inputBuf_2_V_we1;
wire   [3:0] inputBuf_3_V_address0;
reg    inputBuf_3_V_ce0;
wire   [31:0] inputBuf_3_V_q0;
reg   [3:0] inputBuf_3_V_address1;
reg    inputBuf_3_V_ce1;
reg    inputBuf_3_V_we1;
wire   [63:0] zext_ln220_fu_441_p1;
wire   [63:0] zext_ln247_fu_588_p1;
wire   [63:0] zext_ln201_fu_700_p1;
reg   [31:0] ofm_y_1_0_fu_76;
wire   [31:0] select_ln235_1_fu_549_p3;
wire   [0:0] icmp_ln223_fu_467_p2;
wire   [0:0] icmp_ln226_fu_484_p2;
wire   [0:0] icmp_ln229_fu_495_p2;
wire   [0:0] icmp_ln232_fu_515_p2;
reg   [31:0] ofm_x_1_0_fu_80;
wire   [31:0] add_ln231_fu_509_p2;
reg   [31:0] k_y_1_0_fu_84;
wire   [31:0] add_ln215_fu_419_p2;
reg   [31:0] inp_15_0_fu_88;
wire   [31:0] select_ln235_fu_541_p3;
wire   [31:0] add_ln203_fu_712_p2;
reg   [31:0] k_x_1_0_fu_92;
wire   [31:0] add_ln225_fu_478_p2;
reg   [31:0] count_simd_1_0_fu_96;
wire   [31:0] add_ln222_fu_461_p2;
reg   [31:0] read_block_1_0_fu_100;
wire   [31:0] zext_ln251_fu_653_p1;
wire   [31:0] add_ln210_fu_748_p2;
wire   [0:0] icmp_ln204_fu_340_p2;
reg   [31:0] current_block_write_s_fu_104;
wire   [31:0] select_ln251_fu_629_p3;
wire   [31:0] select_ln207_fu_740_p3;
reg   [31:0] current_line_1_0_fu_108;
wire   [31:0] select_ln251_1_fu_637_p3;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] counter_internal_blo_fu_112;
wire   [31:0] select_ln263_fu_687_p3;
wire   [31:0] tmp_V_1_fu_764_p6;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] trunc_ln321_1_fu_596_p1;
wire   [1:0] trunc_ln321_fu_708_p1;
wire   [31:0] add_ln219_fu_429_p2;
wire   [31:0] add_ln219_1_fu_435_p2;
wire   [1:0] trunc_ln215_1_fu_425_p1;
wire   [1:0] add_ln220_1_fu_449_p2;
wire   [1:0] trunc_ln215_fu_415_p1;
wire   [31:0] add_ln234_fu_529_p2;
wire   [0:0] icmp_ln235_fu_535_p2;
wire   [0:0] icmp_ln244_fu_570_p2;
wire   [0:0] icmp_ln244_1_fu_576_p2;
wire   [3:0] trunc_ln196_fu_384_p1;
wire   [31:0] add_ln255_fu_609_p2;
wire   [0:0] icmp_ln256_fu_615_p2;
wire   [0:0] icmp_ln251_fu_334_p2;
wire   [31:0] select_ln256_fu_621_p3;
wire   [3:0] add_ln255_1_fu_603_p2;
wire   [3:0] select_ln251_2_fu_645_p3;
wire   [31:0] add_ln262_fu_675_p2;
wire   [0:0] icmp_ln263_fu_681_p2;
wire   [31:0] add_ln206_fu_728_p2;
wire   [0:0] icmp_ln207_fu_734_p2;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op124_store_state2;
reg    ap_enable_operation_124;
reg    ap_enable_state2_pp0_iter0_stage0;
reg    ap_predicate_op66_load_state2;
reg    ap_enable_operation_66;
reg    ap_predicate_op199_load_state3;
reg    ap_enable_operation_199;
reg    ap_enable_state3_pp0_iter1_stage0;
reg    ap_predicate_op167_store_state2;
reg    ap_enable_operation_167;
reg    ap_predicate_op126_store_state2;
reg    ap_enable_operation_126;
reg    ap_predicate_op64_load_state2;
reg    ap_enable_operation_64;
reg    ap_predicate_op198_load_state3;
reg    ap_enable_operation_198;
reg    ap_predicate_op169_store_state2;
reg    ap_enable_operation_169;
reg    ap_predicate_op128_store_state2;
reg    ap_enable_operation_128;
reg    ap_predicate_op62_load_state2;
reg    ap_enable_operation_62;
reg    ap_predicate_op197_load_state3;
reg    ap_enable_operation_197;
reg    ap_predicate_op171_store_state2;
reg    ap_enable_operation_171;
reg    ap_predicate_op130_store_state2;
reg    ap_enable_operation_130;
reg    ap_predicate_op68_load_state2;
reg    ap_enable_operation_68;
reg    ap_predicate_op200_load_state3;
reg    ap_enable_operation_200;
reg    ap_predicate_op173_store_state2;
reg    ap_enable_operation_173;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_647;
reg    ap_condition_230;
reg    ap_condition_653;
reg    ap_condition_657;
reg    ap_condition_661;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

ConvolutionInputGenerator_1_ConvolutionInputGbkb #(
    .DataWidth( 32 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
inputBuf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_0_V_address0),
    .ce0(inputBuf_0_V_ce0),
    .q0(inputBuf_0_V_q0),
    .address1(inputBuf_0_V_address1),
    .ce1(inputBuf_0_V_ce1),
    .we1(inputBuf_0_V_we1),
    .d1(in_V_V_TDATA)
);

ConvolutionInputGenerator_1_ConvolutionInputGbkb #(
    .DataWidth( 32 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
inputBuf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_1_V_address0),
    .ce0(inputBuf_1_V_ce0),
    .q0(inputBuf_1_V_q0),
    .address1(inputBuf_1_V_address1),
    .ce1(inputBuf_1_V_ce1),
    .we1(inputBuf_1_V_we1),
    .d1(in_V_V_TDATA)
);

ConvolutionInputGenerator_1_ConvolutionInputGbkb #(
    .DataWidth( 32 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
inputBuf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_2_V_address0),
    .ce0(inputBuf_2_V_ce0),
    .q0(inputBuf_2_V_q0),
    .address1(inputBuf_2_V_address1),
    .ce1(inputBuf_2_V_ce1),
    .we1(inputBuf_2_V_we1),
    .d1(in_V_V_TDATA)
);

ConvolutionInputGenerator_1_ConvolutionInputGbkb #(
    .DataWidth( 32 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
inputBuf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_3_V_address0),
    .ce0(inputBuf_3_V_ce0),
    .q0(inputBuf_3_V_q0),
    .address1(inputBuf_3_V_address1),
    .ce1(inputBuf_3_V_ce1),
    .we1(inputBuf_3_V_we1),
    .d1(in_V_V_TDATA)
);

ConvolutionInputGenerator_1_ConvolutionInputGfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
ConvolutionInputGfYi_U1(
    .din0(inputBuf_0_V_q0),
    .din1(inputBuf_1_V_q0),
    .din2(inputBuf_2_V_q0),
    .din3(inputBuf_3_V_q0),
    .din4(add_ln220_reg_877),
    .dout(tmp_V_1_fu_764_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln223_fu_467_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        count_simd_1_0_fu_96 <= add_ln222_fu_461_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln226_fu_484_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln229_fu_495_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln232_fu_515_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln232_fu_515_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        count_simd_1_0_fu_96 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        counter_internal_blo_fu_112 <= select_ln263_fu_687_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln204_fu_340_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        counter_internal_blo_fu_112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln204_fu_340_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_block_write_s_fu_104 <= select_ln207_fu_740_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_block_write_s_fu_104 <= select_ln251_fu_629_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        current_block_write_s_fu_104 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln204_fu_340_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_line_1_0_fu_108 <= grp_fu_328_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_line_1_0_fu_108 <= select_ln251_1_fu_637_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln204_fu_340_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        current_line_1_0_fu_108 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_0_reg_269 <= 11'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_0_reg_269 <= add_ln196_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_15_0_fu_88 <= add_ln203_fu_712_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln232_fu_515_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_15_0_fu_88 <= select_ln235_fu_541_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        inp_15_0_fu_88 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln226_fu_484_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_x_1_0_fu_92 <= add_ln225_fu_478_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln229_fu_495_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln232_fu_515_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln232_fu_515_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_x_1_0_fu_92 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln229_fu_495_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_y_1_0_fu_84 <= add_ln215_fu_419_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_y_1_0_fu_84 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln232_fu_515_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ofm_x_1_0_fu_80 <= add_ln231_fu_509_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln232_fu_515_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        ofm_x_1_0_fu_80 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln232_fu_515_p2 == 1'd1) & (icmp_ln229_fu_495_p2 == 1'd1) & (icmp_ln226_fu_484_p2 == 1'd1) & (icmp_ln223_fu_467_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ofm_y_1_0_fu_76 <= select_ln235_1_fu_549_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ofm_y_1_0_fu_76 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln204_fu_340_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        read_block_1_0_fu_100 <= add_ln210_fu_748_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        read_block_1_0_fu_100 <= zext_ln251_fu_653_p1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        read_block_1_0_fu_100 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln220_reg_877 <= add_ln220_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_366_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln198_reg_869 <= icmp_ln198_fu_388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln214_reg_873 <= icmp_ln214_fu_397_p2;
    end
end

always @ (*) begin
    if ((icmp_ln196_fu_366_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_V_V_TDATA_blk_n = in_V_V_TVALID;
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op159_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op116_read_state2 == 1'b1)))) begin
        in_V_V_TREADY = 1'b1;
    end else begin
        in_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_230)) begin
        if (((icmp_ln198_fu_388_p2 == 1'd1) & (trunc_ln321_fu_708_p1 == 2'd0))) begin
            inputBuf_0_V_address1 = zext_ln201_fu_700_p1;
        end else if ((1'b1 == ap_condition_647)) begin
            inputBuf_0_V_address1 = zext_ln247_fu_588_p1;
        end else begin
            inputBuf_0_V_address1 = 'bx;
        end
    end else begin
        inputBuf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_0_V_ce0 = 1'b1;
    end else begin
        inputBuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_0_V_ce1 = 1'b1;
    end else begin
        inputBuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_0_V_we1 = 1'b1;
    end else begin
        inputBuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_230)) begin
        if (((icmp_ln198_fu_388_p2 == 1'd1) & (trunc_ln321_fu_708_p1 == 2'd1))) begin
            inputBuf_1_V_address1 = zext_ln201_fu_700_p1;
        end else if ((1'b1 == ap_condition_653)) begin
            inputBuf_1_V_address1 = zext_ln247_fu_588_p1;
        end else begin
            inputBuf_1_V_address1 = 'bx;
        end
    end else begin
        inputBuf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_1_V_ce0 = 1'b1;
    end else begin
        inputBuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_1_V_ce1 = 1'b1;
    end else begin
        inputBuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_1_V_we1 = 1'b1;
    end else begin
        inputBuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_230)) begin
        if (((icmp_ln198_fu_388_p2 == 1'd1) & (trunc_ln321_fu_708_p1 == 2'd2))) begin
            inputBuf_2_V_address1 = zext_ln201_fu_700_p1;
        end else if ((1'b1 == ap_condition_657)) begin
            inputBuf_2_V_address1 = zext_ln247_fu_588_p1;
        end else begin
            inputBuf_2_V_address1 = 'bx;
        end
    end else begin
        inputBuf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_2_V_ce0 = 1'b1;
    end else begin
        inputBuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_2_V_ce1 = 1'b1;
    end else begin
        inputBuf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_2_V_we1 = 1'b1;
    end else begin
        inputBuf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_230)) begin
        if (((icmp_ln198_fu_388_p2 == 1'd1) & (trunc_ln321_fu_708_p1 == 2'd3))) begin
            inputBuf_3_V_address1 = zext_ln201_fu_700_p1;
        end else if ((1'b1 == ap_condition_661)) begin
            inputBuf_3_V_address1 = zext_ln247_fu_588_p1;
        end else begin
            inputBuf_3_V_address1 = 'bx;
        end
    end else begin
        inputBuf_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_3_V_ce0 = 1'b1;
    end else begin
        inputBuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_3_V_ce1 = 1'b1;
    end else begin
        inputBuf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_3_V_we1 = 1'b1;
    end else begin
        inputBuf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln214_reg_873 == 1'd1) & (icmp_ln198_reg_869 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op202_write_state3 == 1'b1))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln196_fu_366_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln196_fu_366_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln196_fu_372_p2 = (i_0_0_reg_269 + 11'd1);

assign add_ln203_fu_712_p2 = (inp_15_0_fu_88 + 32'd1);

assign add_ln206_fu_728_p2 = (current_block_write_s_fu_104 + 32'd1);

assign add_ln210_fu_748_p2 = (read_block_1_0_fu_100 + 32'd1);

assign add_ln215_fu_419_p2 = (32'd1 + k_y_1_0_fu_84);

assign add_ln219_1_fu_435_p2 = (add_ln219_fu_429_p2 + k_x_1_0_fu_92);

assign add_ln219_fu_429_p2 = (ofm_x_1_0_fu_80 + count_simd_1_0_fu_96);

assign add_ln220_1_fu_449_p2 = (2'd1 + trunc_ln215_1_fu_425_p1);

assign add_ln220_fu_455_p2 = (add_ln220_1_fu_449_p2 + trunc_ln215_fu_415_p1);

assign add_ln222_fu_461_p2 = (32'd1 + count_simd_1_0_fu_96);

assign add_ln225_fu_478_p2 = (k_x_1_0_fu_92 + 32'd1);

assign add_ln231_fu_509_p2 = (ofm_x_1_0_fu_80 + 32'd1);

assign add_ln234_fu_529_p2 = (ofm_y_1_0_fu_76 + 32'd1);

assign add_ln255_1_fu_603_p2 = (trunc_ln196_fu_384_p1 + 4'd1);

assign add_ln255_fu_609_p2 = (current_block_write_s_fu_104 + 32'd1);

assign add_ln262_fu_675_p2 = (counter_internal_blo_fu_112 + 32'd1);

assign and_ln244_fu_582_p2 = (icmp_ln244_fu_570_p2 & icmp_ln244_1_fu_576_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op159_read_state2 == 1'b1)) | ((in_V_V_TVALID == 1'b0) & (ap_predicate_op116_read_state2 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op159_read_state2 == 1'b1)) | ((in_V_V_TVALID == 1'b0) & (ap_predicate_op116_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op159_read_state2 == 1'b1)) | ((in_V_V_TVALID == 1'b0) & (ap_predicate_op116_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((in_V_V_TVALID == 1'b0) & (ap_predicate_op159_read_state2 == 1'b1)) | ((in_V_V_TVALID == 1'b0) & (ap_predicate_op116_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = ((out_V_V_TREADY == 1'b0) & (ap_predicate_op202_write_state3 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_230 = ((icmp_ln196_fu_366_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_647 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd0));
end

always @ (*) begin
    ap_condition_653 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd1));
end

always @ (*) begin
    ap_condition_657 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd2));
end

always @ (*) begin
    ap_condition_661 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd3));
end

always @ (*) begin
    ap_enable_operation_124 = (ap_predicate_op124_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_126 = (ap_predicate_op126_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_128 = (ap_predicate_op128_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_130 = (ap_predicate_op130_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_167 = (ap_predicate_op167_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_173 = (ap_predicate_op173_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_197 = (ap_predicate_op197_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_198 = (ap_predicate_op198_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_199 = (ap_predicate_op199_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_200 = (ap_predicate_op200_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_62 = (ap_predicate_op62_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_64 = (ap_predicate_op64_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_66 = (ap_predicate_op66_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_68 = (ap_predicate_op68_load_state2 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state2_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op116_read_state2 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op124_store_state2 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op126_store_state2 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op128_store_state2 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op130_store_state2 = ((1'd1 == and_ln244_fu_582_p2) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_1_fu_596_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op159_read_state2 = ((icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op167_store_state2 = ((icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op169_store_state2 = ((icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op171_store_state2 = ((icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op173_store_state2 = ((icmp_ln198_fu_388_p2 == 1'd1) & (icmp_ln196_fu_366_p2 == 1'd0) & (trunc_ln321_fu_708_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op197_load_state3 = ((icmp_ln214_reg_873 == 1'd1) & (icmp_ln198_reg_869 == 1'd0));
end

always @ (*) begin
    ap_predicate_op198_load_state3 = ((icmp_ln214_reg_873 == 1'd1) & (icmp_ln198_reg_869 == 1'd0));
end

always @ (*) begin
    ap_predicate_op199_load_state3 = ((icmp_ln214_reg_873 == 1'd1) & (icmp_ln198_reg_869 == 1'd0));
end

always @ (*) begin
    ap_predicate_op200_load_state3 = ((icmp_ln214_reg_873 == 1'd1) & (icmp_ln198_reg_869 == 1'd0));
end

always @ (*) begin
    ap_predicate_op202_write_state3 = ((icmp_ln214_reg_873 == 1'd1) & (icmp_ln198_reg_869 == 1'd0));
end

always @ (*) begin
    ap_predicate_op62_load_state2 = ((icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op64_load_state2 = ((icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op66_load_state2 = ((icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op68_load_state2 = ((icmp_ln214_fu_397_p2 == 1'd1) & (icmp_ln198_fu_388_p2 == 1'd0) & (icmp_ln196_fu_366_p2 == 1'd0));
end

assign grp_fu_328_p2 = (current_line_1_0_fu_108 + 32'd1);

assign icmp_ln196_fu_366_p2 = ((i_0_0_reg_269 == 11'd1338) ? 1'b1 : 1'b0);

assign icmp_ln198_fu_388_p2 = ((inp_15_0_fu_88 < 32'd42) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_340_p2 = ((grp_fu_328_p2 == 32'd14) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_734_p2 = ((add_ln206_fu_728_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln214_fu_397_p2 = ((counter_internal_blo_fu_112 < 32'd107) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_467_p2 = ((count_simd_1_0_fu_96 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln226_fu_484_p2 = ((add_ln225_fu_478_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln229_fu_495_p2 = ((add_ln215_fu_419_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln232_fu_515_p2 = ((add_ln231_fu_509_p2 == 32'd12) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_535_p2 = ((add_ln234_fu_529_p2 == 32'd12) ? 1'b1 : 1'b0);

assign icmp_ln244_1_fu_576_p2 = ((read_block_1_0_fu_100 < 32'd14) ? 1'b1 : 1'b0);

assign icmp_ln244_fu_570_p2 = ((counter_internal_blo_fu_112 < 32'd13) ? 1'b1 : 1'b0);

assign icmp_ln251_fu_334_p2 = ((grp_fu_328_p2 == 32'd14) ? 1'b1 : 1'b0);

assign icmp_ln256_fu_615_p2 = ((add_ln255_fu_609_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln263_fu_681_p2 = ((add_ln262_fu_675_p2 == 32'd107) ? 1'b1 : 1'b0);

assign inputBuf_0_V_address0 = zext_ln220_fu_441_p1;

assign inputBuf_1_V_address0 = zext_ln220_fu_441_p1;

assign inputBuf_2_V_address0 = zext_ln220_fu_441_p1;

assign inputBuf_3_V_address0 = zext_ln220_fu_441_p1;

assign out_V_V_TDATA = tmp_V_1_fu_764_p6;

assign select_ln207_fu_740_p3 = ((icmp_ln207_fu_734_p2[0:0] === 1'b1) ? 32'd0 : add_ln206_fu_728_p2);

assign select_ln235_1_fu_549_p3 = ((icmp_ln235_fu_535_p2[0:0] === 1'b1) ? 32'd0 : add_ln234_fu_529_p2);

assign select_ln235_fu_541_p3 = ((icmp_ln235_fu_535_p2[0:0] === 1'b1) ? 32'd0 : inp_15_0_fu_88);

assign select_ln251_1_fu_637_p3 = ((icmp_ln251_fu_334_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_328_p2);

assign select_ln251_2_fu_645_p3 = ((icmp_ln251_fu_334_p2[0:0] === 1'b1) ? add_ln255_1_fu_603_p2 : trunc_ln196_fu_384_p1);

assign select_ln251_fu_629_p3 = ((icmp_ln251_fu_334_p2[0:0] === 1'b1) ? select_ln256_fu_621_p3 : current_block_write_s_fu_104);

assign select_ln256_fu_621_p3 = ((icmp_ln256_fu_615_p2[0:0] === 1'b1) ? 32'd0 : add_ln255_fu_609_p2);

assign select_ln263_fu_687_p3 = ((icmp_ln263_fu_681_p2[0:0] === 1'b1) ? 32'd0 : add_ln262_fu_675_p2);

assign trunc_ln196_fu_384_p1 = read_block_1_0_fu_100[3:0];

assign trunc_ln215_1_fu_425_p1 = current_block_write_s_fu_104[1:0];

assign trunc_ln215_fu_415_p1 = k_y_1_0_fu_84[1:0];

assign trunc_ln321_1_fu_596_p1 = current_block_write_s_fu_104[1:0];

assign trunc_ln321_fu_708_p1 = current_block_write_s_fu_104[1:0];

assign zext_ln201_fu_700_p1 = current_line_1_0_fu_108;

assign zext_ln220_fu_441_p1 = add_ln219_1_fu_435_p2;

assign zext_ln247_fu_588_p1 = current_line_1_0_fu_108;

assign zext_ln251_fu_653_p1 = select_ln251_2_fu_645_p3;

endmodule //ConvolutionInputGenerator_1_ConvolutionInputGene_1
